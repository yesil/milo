{
  "version": 3,
  "sources": ["../node_modules/@spectrum-web-components/picker/src/Picker.ts", "../node_modules/@spectrum-web-components/picker/src/picker.css.ts", "../node_modules/@spectrum-web-components/picker/src/InteractionController.ts", "../node_modules/@spectrum-web-components/picker/src/DesktopController.ts", "../node_modules/@spectrum-web-components/picker/src/MobileController.ts", "../node_modules/@spectrum-web-components/picker/src/strategies.ts", "../node_modules/@spectrum-web-components/picker/sp-picker.ts"],
  "sourcesContent": ["/*\nCopyright 2020 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\n\nimport {\n    CSSResultArray,\n    DefaultElementSize,\n    html,\n    nothing,\n    PropertyValues,\n    render,\n    SizedMixin,\n    TemplateResult,\n} from '@spectrum-web-components/base';\nimport {\n    classMap,\n    ifDefined,\n    StyleInfo,\n    styleMap,\n    when,\n} from '@spectrum-web-components/base/src/directives.js';\nimport {\n    property,\n    query,\n    state,\n} from '@spectrum-web-components/base/src/decorators.js';\n\nimport pickerStyles from './picker.css.js';\nimport chevronStyles from '@spectrum-web-components/icon/src/spectrum-icon-chevron.css.js';\n\nimport { Focusable } from '@spectrum-web-components/shared/src/focusable.js';\nimport type { Tooltip } from '@spectrum-web-components/tooltip';\nimport '@spectrum-web-components/icons-ui/icons/sp-icon-chevron100.js';\nimport '@spectrum-web-components/icons-workflow/icons/sp-icon-alert.js';\nimport '@spectrum-web-components/menu/sp-menu.js';\nimport type {\n    Menu,\n    MenuItem,\n    MenuItemChildren,\n} from '@spectrum-web-components/menu';\nimport { Placement } from '@spectrum-web-components/overlay';\nimport {\n    IS_MOBILE,\n    MatchMediaController,\n} from '@spectrum-web-components/reactive-controllers/src/MatchMedia.js';\nimport { DependencyManagerController } from '@spectrum-web-components/reactive-controllers/src/DependencyManger.js';\nimport { Overlay } from '@spectrum-web-components/overlay/src/Overlay.js';\nimport type { SlottableRequestEvent } from '@spectrum-web-components/overlay/src/slottable-request-event.js';\nimport type { FieldLabel } from '@spectrum-web-components/field-label';\n\nimport { DesktopController } from './DesktopController.js';\nimport { MobileController } from './MobileController.js';\nimport { strategies } from './strategies.js';\n\nconst chevronClass = {\n    s: 'spectrum-UIIcon-ChevronDown75',\n    m: 'spectrum-UIIcon-ChevronDown100',\n    l: 'spectrum-UIIcon-ChevronDown200',\n    xl: 'spectrum-UIIcon-ChevronDown300',\n};\n\nexport const DESCRIPTION_ID = 'option-picker';\nexport class PickerBase extends SizedMixin(Focusable, { noDefaultSize: true }) {\n    public isMobile = new MatchMediaController(this, IS_MOBILE);\n\n    public strategy!: DesktopController | MobileController;\n\n    @state()\n    appliedLabel?: string;\n\n    @query('#button')\n    public button!: HTMLButtonElement;\n\n    public dependencyManager = new DependencyManagerController(this);\n\n    private deprecatedMenu: Menu | null = null;\n\n    @property({ type: Boolean, reflect: true })\n    public override disabled = false;\n\n    @property({ type: Boolean, reflect: true })\n    public focused = false;\n\n    @property({ type: String, reflect: true })\n    public icons?: 'only' | 'none';\n\n    @property({ type: Boolean, reflect: true })\n    public invalid = false;\n\n    /** Whether the items are currently loading. */\n    @property({ type: Boolean, reflect: true })\n    public pending = false;\n\n    /** Defines a string value that labels the Picker while it is in pending state. */\n    @property({ type: String, attribute: 'pending-label' })\n    public pendingLabel = 'Pending';\n\n    @property()\n    public label?: string;\n\n    @property({ type: Boolean, reflect: true })\n    public open = false;\n\n    @property({ type: Boolean, reflect: true })\n    public readonly = false;\n\n    public selects: undefined | 'single' = 'single';\n\n    @state()\n    public labelAlignment?: 'inline';\n\n    protected get menuItems(): MenuItem[] {\n        return this.optionsMenu.childItems;\n    }\n\n    @query('sp-menu')\n    public optionsMenu!: Menu;\n\n    private _selfManageFocusElement = false;\n\n    public override get selfManageFocusElement(): boolean {\n        return this._selfManageFocusElement;\n    }\n\n    @query('sp-overlay')\n    public overlayElement!: Overlay;\n\n    protected tooltipEl?: Tooltip;\n\n    /**\n     * @type {\"top\" | \"top-start\" | \"top-end\" | \"right\" | \"right-start\" | \"right-end\" | \"bottom\" | \"bottom-start\" | \"bottom-end\" | \"left\" | \"left-start\" | \"left-end\"}\n     * @attr\n     */\n\n    @property()\n    public placement: Placement = 'bottom-start';\n\n    @property({ type: Boolean, reflect: true })\n    public quiet = false;\n\n    @property({ type: String })\n    public value = '';\n\n    @property({ attribute: false })\n    public get selectedItem(): MenuItem | undefined {\n        return this._selectedItem;\n    }\n\n    public set selectedItem(selectedItem: MenuItem | undefined) {\n        this.selectedItemContent = selectedItem\n            ? selectedItem.itemChildren\n            : undefined;\n\n        if (selectedItem === this.selectedItem) return;\n        const oldSelectedItem = this.selectedItem;\n        this._selectedItem = selectedItem;\n        this.requestUpdate('selectedItem', oldSelectedItem);\n    }\n\n    _selectedItem?: MenuItem;\n\n    protected listRole: 'listbox' | 'menu' = 'listbox';\n    protected itemRole = 'option';\n\n    public override get focusElement(): HTMLElement {\n        if (this.open) {\n            return this.optionsMenu;\n        }\n        return this.button;\n    }\n\n    public forceFocusVisible(): void {\n        if (this.disabled) {\n            return;\n        }\n\n        this.focused = true;\n    }\n\n    public override click(): void {\n        if (this.disabled) {\n            return;\n        }\n\n        this.toggle();\n    }\n\n    public handleButtonBlur(): void {\n        this.focused = false;\n    }\n\n    public override focus(options?: FocusOptions): void {\n        super.focus(options);\n\n        if (!this.disabled && this.focusElement) {\n            this.focused = this.hasVisibleFocusInTree();\n        }\n    }\n\n    public handleHelperFocus(): void {\n        // set focused to true here instead of handleButtonFocus so clicks don't flash a focus outline\n        this.focused = true;\n        this.button.focus();\n    }\n\n    public handleChange(event: Event): void {\n        if (this.strategy) {\n            this.strategy.preventNextToggle = 'no';\n        }\n        const target = event.target as Menu;\n        const [selected] = target.selectedItems;\n        event.stopPropagation();\n        if (event.cancelable) {\n            this.setValueFromItem(selected, event);\n        } else {\n            // Non-cancelable \"change\" events announce a selection with no value\n            // change that should close the Picker element.\n            this.open = false;\n            if (this.strategy) {\n                this.strategy.open = false;\n            }\n        }\n    }\n\n    public handleButtonFocus(event: FocusEvent): void {\n        this.strategy?.handleButtonFocus(event);\n    }\n\n    protected handleKeydown = (event: KeyboardEvent): void => {\n        this.focused = true;\n        if (event.code !== 'ArrowDown' && event.code !== 'ArrowUp') {\n            return;\n        }\n        event.stopPropagation();\n        event.preventDefault();\n        this.toggle(true);\n    };\n\n    protected async setValueFromItem(\n        item: MenuItem,\n        menuChangeEvent?: Event\n    ): Promise<void> {\n        this.open = false;\n        // should always close when \"setting\" a value\n        if (this.strategy) {\n            this.strategy.open = false;\n        }\n        const oldSelectedItem = this.selectedItem;\n        const oldValue = this.value;\n\n        // Set a value.\n        this.selectedItem = item;\n        this.value = item?.value ?? '';\n        await this.updateComplete;\n        const applyDefault = this.dispatchEvent(\n            new Event('change', {\n                bubbles: true,\n                // Allow it to be prevented.\n                cancelable: true,\n                composed: true,\n            })\n        );\n        if (!applyDefault && this.selects) {\n            if (menuChangeEvent) {\n                menuChangeEvent.preventDefault();\n            }\n            this.setMenuItemSelected(this.selectedItem as MenuItem, false);\n            if (oldSelectedItem) {\n                this.setMenuItemSelected(oldSelectedItem, true);\n            }\n            this.selectedItem = oldSelectedItem;\n            this.value = oldValue;\n            this.open = true;\n            if (this.strategy) {\n                this.strategy.open = true;\n            }\n            return;\n        } else if (!this.selects) {\n            // Unset the value if not carrying a selection\n            this.selectedItem = oldSelectedItem;\n            this.value = oldValue;\n            return;\n        }\n        if (oldSelectedItem) {\n            this.setMenuItemSelected(oldSelectedItem, false);\n        }\n        this.setMenuItemSelected(item, !!this.selects);\n    }\n\n    protected setMenuItemSelected(item: MenuItem, value: boolean): void {\n        // matches null | undefined\n        if (this.selects == null) return;\n        item.selected = value;\n    }\n\n    public toggle(target?: boolean): void {\n        if (this.readonly || this.pending) {\n            return;\n        }\n        this.open = typeof target !== 'undefined' ? target : !this.open;\n        if (this.strategy) {\n            this.strategy.open = this.open;\n        }\n        if (this.open) {\n            this._selfManageFocusElement = true;\n        } else {\n            this._selfManageFocusElement = false;\n        }\n    }\n\n    public close(): void {\n        if (this.readonly) {\n            return;\n        }\n        if (this.strategy) {\n            this.open = false;\n            this.strategy.open = false;\n        }\n    }\n\n    protected get containerStyles(): StyleInfo {\n        // @todo: test in mobile\n        /* c8 ignore next 5 */\n        if (this.isMobile.matches) {\n            return {\n                '--swc-menu-width': '100%',\n            };\n        }\n        return {};\n    }\n\n    @state()\n    protected get selectedItemContent(): MenuItemChildren {\n        return this._selectedItemContent || { icon: [], content: [] };\n    }\n\n    protected set selectedItemContent(\n        selectedItemContent: MenuItemChildren | undefined\n    ) {\n        if (selectedItemContent === this.selectedItemContent) return;\n\n        const oldContent = this.selectedItemContent;\n        this._selectedItemContent = selectedItemContent;\n        this.requestUpdate('selectedItemContent', oldContent);\n    }\n\n    _selectedItemContent?: MenuItemChildren;\n\n    protected handleTooltipSlotchange(\n        event: Event & { target: HTMLSlotElement }\n    ): void {\n        this.tooltipEl = event.target.assignedElements()[0] as\n            | Tooltip\n            | undefined;\n    }\n\n    public handleSlottableRequest = (_event: SlottableRequestEvent): void => {};\n\n    protected renderLabelContent(content: Node[]): TemplateResult | Node[] {\n        if (this.value && this.selectedItem) {\n            return content;\n        }\n        return html`\n            <slot name=\"label\" id=\"label\">\n                <span\n                    aria-hidden=${ifDefined(\n                        this.appliedLabel ? undefined : 'true'\n                    )}\n                >\n                    ${this.label}\n                </span>\n            </slot>\n        `;\n    }\n\n    protected get buttonContent(): TemplateResult[] {\n        const labelClasses = {\n            'visually-hidden': this.icons === 'only' && !!this.value,\n            placeholder: !this.value,\n            label: true,\n        };\n        const appliedLabel = this.appliedLabel || this.label;\n        return [\n            html`\n                <span id=\"icon\" ?hidden=${this.icons === 'none'}>\n                    ${this.selectedItemContent.icon}\n                </span>\n                <span\n                    id=${ifDefined(\n                        this.value && this.selectedItem ? 'label' : undefined\n                    )}\n                    class=${classMap(labelClasses)}\n                >\n                    ${this.renderLabelContent(this.selectedItemContent.content)}\n                </span>\n                ${this.value && this.selectedItem\n                    ? html`\n                          <span\n                              aria-hidden=\"true\"\n                              class=\"visually-hidden\"\n                              id=\"applied-label\"\n                          >\n                              ${appliedLabel}\n                              <slot name=\"label\"></slot>\n                          </span>\n                      `\n                    : html`\n                          <span hidden id=\"applied-label\">${appliedLabel}</span>\n                      `}\n                ${this.invalid && !this.pending\n                    ? html`\n                          <sp-icon-alert\n                              class=\"validation-icon\"\n                          ></sp-icon-alert>\n                      `\n                    : nothing}\n                ${when(this.pending, () => {\n                    import(\n                        '@spectrum-web-components/progress-circle/sp-progress-circle.js'\n                    );\n                    // aria-valuetext is a workaround for aria-valuenow being applied in Firefox even in indeterminate mode.\n                    return html`\n                        <sp-progress-circle\n                            id=\"loader\"\n                            size=\"s\"\n                            indeterminate\n                            aria-valuetext=${this.pendingLabel}\n                            class=\"progress-circle\"\n                        ></sp-progress-circle>\n                    `;\n                })}\n                <sp-icon-chevron100\n                    class=\"picker ${chevronClass[\n                        this.size as DefaultElementSize\n                    ]}\"\n                ></sp-icon-chevron100>\n                <slot\n                    aria-hidden=\"true\"\n                    name=\"tooltip\"\n                    id=\"tooltip\"\n                    @slotchange=${this.handleTooltipSlotchange}\n                ></slot>\n            `,\n        ];\n    }\n\n    applyFocusElementLabel = (\n        value: string,\n        labelElement: FieldLabel\n    ): void => {\n        this.appliedLabel = value;\n        this.labelAlignment = labelElement.sideAligned ? 'inline' : undefined;\n    };\n\n    protected renderOverlay(menu: TemplateResult): TemplateResult {\n        if (this.strategy?.overlay === undefined) {\n            return menu;\n        }\n        const container = this.renderContainer(menu);\n        render(container, this.strategy?.overlay as unknown as HTMLElement, {\n            host: this,\n        });\n        return this.strategy?.overlay as unknown as TemplateResult;\n    }\n\n    protected get renderDescriptionSlot(): TemplateResult {\n        return html`\n            <div id=${DESCRIPTION_ID}>\n                <slot name=\"description\"></slot>\n            </div>\n        `;\n    }\n    // a helper to throw focus to the button is needed because Safari\n    // won't include buttons in the tab order even with tabindex=\"0\"\n    protected override render(): TemplateResult {\n        if (this.tooltipEl) {\n            this.tooltipEl.disabled = this.open;\n        }\n        return html`\n            <span\n                id=\"focus-helper\"\n                tabindex=\"${this.focused || this.open ? '-1' : '0'}\"\n                @focus=${this.handleHelperFocus}\n                aria-describedby=${DESCRIPTION_ID}\n            ></span>\n            <button\n                aria-controls=${ifDefined(this.open ? 'menu' : undefined)}\n                aria-describedby=\"tooltip\"\n                aria-expanded=${this.open ? 'true' : 'false'}\n                aria-haspopup=\"true\"\n                aria-labelledby=\"loader icon label applied-label\"\n                id=\"button\"\n                class=${ifDefined(\n                    this.labelAlignment\n                        ? `label-${this.labelAlignment}`\n                        : undefined\n                )}\n                @blur=${this.handleButtonBlur}\n                @keydown=${{\n                    handleEvent: this.handleEnterKeydown,\n                    capture: true,\n                }}\n                ?disabled=${this.disabled}\n                tabindex=\"-1\"\n            >\n                ${this.buttonContent}\n            </button>\n            ${this.renderMenu} ${this.renderDescriptionSlot}\n        `;\n    }\n\n    protected override update(changes: PropertyValues<this>): void {\n        if (this.selects) {\n            // Always force `selects` to \"single\" when set.\n            // TODO: Add support functionally and visually for \"multiple\"\n            this.selects = 'single';\n        }\n        if (changes.has('disabled') && this.disabled) {\n            if (this.strategy) {\n                this.open = false;\n                this.strategy.open = false;\n            }\n        }\n        if (changes.has('pending') && this.pending) {\n            if (this.strategy) {\n                this.open = false;\n                this.strategy.open = false;\n            }\n        }\n        if (changes.has('value')) {\n            // MenuItems update a frame late for <slot> management,\n            // await the same here.\n            this.shouldScheduleManageSelection();\n        }\n        // Maybe it's finally time to remove this support?\n        if (!this.hasUpdated) {\n            this.deprecatedMenu = this.querySelector(':scope > sp-menu');\n            this.deprecatedMenu?.toggleAttribute('ignore', true);\n            this.deprecatedMenu?.setAttribute('selects', 'inherit');\n        }\n        if (window.__swc.DEBUG) {\n            if (!this.hasUpdated && this.querySelector(':scope > sp-menu')) {\n                const { localName } = this;\n                window.__swc.warn(\n                    this,\n                    `You no longer need to provide an <sp-menu> child to ${localName}. Any styling or attributes on the <sp-menu> will be ignored.`,\n                    'https://opensource.adobe.com/spectrum-web-components/components/picker/#sizes',\n                    { level: 'deprecation' }\n                );\n            }\n            this.updateComplete.then(async () => {\n                // Attributes should be user supplied, making them available before first update.\n                // However, `appliesLabel` is applied by external elements that must be update complete as well to be bound appropriately.\n                await new Promise((res) => requestAnimationFrame(res));\n                await new Promise((res) => requestAnimationFrame(res));\n                if (\n                    !this.label &&\n                    !this.getAttribute('aria-label') &&\n                    !this.getAttribute('aria-labelledby') &&\n                    !this.appliedLabel\n                ) {\n                    window.__swc.warn(\n                        this,\n                        '<${this.localName}> needs one of the following to be accessible:',\n                        'https://opensource.adobe.com/spectrum-web-components/components/picker/#accessibility',\n                        {\n                            type: 'accessibility',\n                            issues: [\n                                `an <sp-field-label> element with a \\`for\\` attribute referencing the \\`id\\` of the \\`<${this.localName}>\\`, or`,\n                                'value supplied to the \"label\" attribute, which will be displayed visually as placeholder text, or',\n                                'text content supplied in a <span> with slot=\"label\", which will also be displayed visually as placeholder text.',\n                            ],\n                        }\n                    );\n                }\n            });\n        }\n        super.update(changes);\n    }\n\n    protected bindButtonKeydownListener(): void {\n        this.button.addEventListener('keydown', this.handleKeydown);\n    }\n\n    protected override updated(changes: PropertyValues<this>): void {\n        super.updated(changes);\n        if (changes.has('open')) {\n            this.strategy.open = this.open;\n        }\n    }\n\n    protected override firstUpdated(changes: PropertyValues<this>): void {\n        super.firstUpdated(changes);\n        this.bindButtonKeydownListener();\n        this.bindEvents();\n    }\n\n    protected get dismissHelper(): TemplateResult {\n        return html`\n            <div class=\"visually-hidden\">\n                <button\n                    tabindex=\"-1\"\n                    aria-label=\"Dismiss\"\n                    @click=${this.close}\n                ></button>\n            </div>\n        `;\n    }\n\n    protected renderContainer(menu: TemplateResult): TemplateResult {\n        const accessibleMenu = html`\n            ${this.dismissHelper} ${menu} ${this.dismissHelper}\n        `;\n        // @todo: test in mobile\n        /* c8 ignore next 11 */\n        if (this.isMobile.matches) {\n            this.dependencyManager.add('sp-tray');\n            import('@spectrum-web-components/tray/sp-tray.js');\n            return html`\n                <sp-tray\n                    id=\"popover\"\n                    role=\"presentation\"\n                    style=${styleMap(this.containerStyles)}\n                >\n                    ${accessibleMenu}\n                </sp-tray>\n            `;\n        }\n        this.dependencyManager.add('sp-popover');\n        import('@spectrum-web-components/popover/sp-popover.js');\n        return html`\n            <sp-popover\n                id=\"popover\"\n                role=\"presentation\"\n                style=${styleMap(this.containerStyles)}\n                placement=${this.placement}\n            >\n                ${accessibleMenu}\n            </sp-popover>\n        `;\n    }\n\n    protected hasRenderedOverlay = false;\n\n    protected get renderMenu(): TemplateResult {\n        const menu = html`\n            <sp-menu\n                aria-labelledby=\"applied-label\"\n                @change=${this.handleChange}\n                id=\"menu\"\n                @keydown=${{\n                    handleEvent: this.handleEnterKeydown,\n                    capture: true,\n                }}\n                role=${this.listRole}\n                .selects=${this.selects}\n                .selected=${this.value ? [this.value] : []}\n                size=${this.size}\n                @sp-menu-item-added-or-updated=${this.shouldManageSelection}\n            >\n                <slot @slotchange=${this.shouldScheduleManageSelection}></slot>\n            </sp-menu>\n        `;\n        this.hasRenderedOverlay =\n            this.hasRenderedOverlay ||\n            this.focused ||\n            this.open ||\n            !!this.deprecatedMenu;\n        if (this.hasRenderedOverlay) {\n            if (this.dependencyManager.loaded) {\n                this.dependencyManager.add('sp-overlay');\n            }\n            return this.renderOverlay(menu);\n        }\n        return menu;\n    }\n\n    private willManageSelection = false;\n\n    protected shouldScheduleManageSelection(event?: Event): void {\n        if (\n            !this.willManageSelection &&\n            (!event ||\n                ((event.target as HTMLElement).getRootNode() as ShadowRoot)\n                    .host === this)\n        ) {\n            this.willManageSelection = true;\n            requestAnimationFrame(() => {\n                requestAnimationFrame(() => {\n                    this.manageSelection();\n                });\n            });\n        }\n    }\n\n    protected shouldManageSelection(): void {\n        if (this.willManageSelection) {\n            return;\n        }\n        this.willManageSelection = true;\n        this.manageSelection();\n    }\n\n    protected async manageSelection(): Promise<void> {\n        if (this.selects == null) return;\n\n        this.selectionPromise = new Promise(\n            (res) => (this.selectionResolver = res)\n        );\n        let selectedItem: MenuItem | undefined;\n        await this.optionsMenu.updateComplete;\n        if (this.recentlyConnected) {\n            // Work around for attach timing differences in Safari and Firefox.\n            // Remove when refactoring to Menu passthrough wrapper.\n            await new Promise((res) => requestAnimationFrame(() => res(true)));\n            this.recentlyConnected = false;\n        }\n        this.menuItems.forEach((item) => {\n            if (this.value === item.value && !item.disabled) {\n                selectedItem = item;\n            } else {\n                item.selected = false;\n            }\n        });\n        if (selectedItem) {\n            selectedItem.selected = !!this.selects;\n            this.selectedItem = selectedItem;\n        } else {\n            this.value = '';\n            this.selectedItem = undefined;\n        }\n        if (this.open) {\n            await this.optionsMenu.updateComplete;\n            this.optionsMenu.updateSelectedItemIndex();\n        }\n        this.selectionResolver();\n        this.willManageSelection = false;\n    }\n\n    private selectionPromise = Promise.resolve();\n    private selectionResolver!: () => void;\n\n    protected override async getUpdateComplete(): Promise<boolean> {\n        const complete = (await super.getUpdateComplete()) as boolean;\n        await this.selectionPromise;\n        // if (this.overlayElement) {\n        //     await this.overlayElement.updateComplete;\n        // }\n        return complete;\n    }\n\n    private recentlyConnected = false;\n\n    private enterKeydownOn: EventTarget | null = null;\n\n    protected handleEnterKeydown = (event: KeyboardEvent): void => {\n        if (event.code !== 'Enter') {\n            return;\n        }\n\n        if (this.enterKeydownOn) {\n            event.preventDefault();\n            return;\n        }\n        this.enterKeydownOn = event.target;\n        this.addEventListener(\n            'keyup',\n            async (keyupEvent: KeyboardEvent) => {\n                if (keyupEvent.code !== 'Enter') {\n                    return;\n                }\n                this.enterKeydownOn = null;\n            },\n            { once: true }\n        );\n    };\n\n    public bindEvents(): void {\n        this.strategy?.abort();\n        if (this.isMobile.matches) {\n            this.strategy = new strategies['mobile'](this.button, this);\n        } else {\n            this.strategy = new strategies['desktop'](this.button, this);\n        }\n    }\n\n    public override connectedCallback(): void {\n        super.connectedCallback();\n        this.recentlyConnected = this.hasUpdated;\n    }\n\n    public override disconnectedCallback(): void {\n        this.close();\n        this.strategy?.releaseDescription();\n        super.disconnectedCallback();\n    }\n}\n\n/**\n * @element sp-picker\n *\n * @slot label - The placeholder content for the Picker\n * @slot description - The description content for the Picker\n * @slot tooltip - Tooltip to to be applied to the the Picker Button\n * @slot - menu items to be listed in the Picker\n * @fires change - Announces that the `value` of the element has changed\n * @fires sp-opened - Announces that the overlay has been opened\n * @fires sp-closed - Announces that the overlay has been closed\n */\nexport class Picker extends PickerBase {\n    public static override get styles(): CSSResultArray {\n        return [pickerStyles, chevronStyles];\n    }\n\n    protected override get containerStyles(): StyleInfo {\n        const styles = super.containerStyles;\n        if (!this.quiet) {\n            styles['min-width'] = `${this.offsetWidth}px`;\n        }\n        return styles;\n    }\n\n    protected override handleKeydown = (event: KeyboardEvent): void => {\n        const { code } = event;\n        this.focused = true;\n        if (!code.startsWith('Arrow') || this.readonly || this.pending) {\n            return;\n        }\n        if (code === 'ArrowUp' || code === 'ArrowDown') {\n            this.toggle(true);\n            event.preventDefault();\n            return;\n        }\n        event.preventDefault();\n        const selectedIndex = this.selectedItem\n            ? this.menuItems.indexOf(this.selectedItem)\n            : -1;\n        // use a positive offset to find the first non-disabled item when no selection is available.\n        const nextOffset = selectedIndex < 0 || code === 'ArrowRight' ? 1 : -1;\n        let nextIndex = selectedIndex + nextOffset;\n        while (\n            this.menuItems[nextIndex] &&\n            this.menuItems[nextIndex].disabled\n        ) {\n            nextIndex += nextOffset;\n        }\n        if (!this.menuItems[nextIndex] || this.menuItems[nextIndex].disabled) {\n            return;\n        }\n        if (!this.value || nextIndex !== selectedIndex) {\n            this.setValueFromItem(this.menuItems[nextIndex]);\n        }\n    };\n}\n", "/*\nCopyright 2024 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\nimport { css } from '@spectrum-web-components/base';\nconst styles = css`\n    #button{cursor:pointer;-webkit-user-select:none;user-select:none;font-family:var(--mod-button-font-family,var(--mod-sans-font-family-stack,var(--spectrum-sans-font-family-stack)));line-height:var(--mod-button-line-height,var(--mod-line-height-100,var(--spectrum-line-height-100)));text-transform:none;vertical-align:top;-webkit-appearance:button;transition:background var(--mod-button-animation-duration,var(--mod-animation-duration-100,var(--spectrum-animation-duration-100)))ease-out,border-color var(--mod-button-animation-duration,var(--mod-animation-duration-100,var(--spectrum-animation-duration-100)))ease-out,color var(--mod-button-animation-duration,var(--mod-animation-duration-100,var(--spectrum-animation-duration-100)))ease-out,box-shadow var(--mod-button-animation-duration,var(--mod-animation-duration-100,var(--spectrum-animation-duration-100)))ease-out;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;justify-content:center;align-items:center;margin:0;-webkit-text-decoration:none;text-decoration:none;display:inline-flex;position:relative;overflow:visible}#button::-moz-focus-inner{border:0;margin-block:-2px;padding:0}#button:focus{outline:none}:host{--spectrum-picker-font-size:var(--spectrum-font-size-100);--spectrum-picker-font-weight:var(--spectrum-regular-font-weight);--spectrum-picker-placeholder-font-style:var(--spectrum-default-font-style);--spectrum-picker-line-height:var(--spectrum-line-height-100);--spectrum-picker-block-size:var(--spectrum-component-height-100);--spectrum-picker-inline-size:var(--spectrum-field-width);--spectrum-picker-border-radius:var(--spectrum-corner-radius-100);--spectrum-picker-spacing-top-to-text:var(--spectrum-component-top-to-text-100);--spectrum-picker-spacing-bottom-to-text:var(--spectrum-component-bottom-to-text-100);--spectrum-picker-spacing-edge-to-text:var(--spectrum-component-edge-to-text-100);--spectrum-picker-spacing-edge-to-text-quiet:var(--spectrum-field-edge-to-text-quiet);--spectrum-picker-spacing-top-to-text-side-label-quiet:var(--spectrum-component-top-to-text-100);--spectrum-picker-spacing-label-to-picker:var(--spectrum-field-label-to-component);--spectrum-picker-spacing-text-to-icon:var(--spectrum-text-to-visual-100);--spectrum-picker-spacing-text-to-icon-inline-end:var(--spectrum-field-text-to-alert-icon-medium);--spectrum-picker-spacing-icon-to-disclosure-icon:var(--spectrum-picker-visual-to-disclosure-icon-medium);--spectrum-picker-spacing-label-to-picker-quiet:var(--spectrum-field-label-to-component-quiet-medium);--spectrum-picker-spacing-top-to-alert-icon:var(--spectrum-field-top-to-alert-icon-medium);--spectrum-picker-spacing-top-to-progress-circle:var(--spectrum-field-top-to-progress-circle-medium);--spectrum-picker-spacing-top-to-disclosure-icon:var(--spectrum-field-top-to-disclosure-icon-100);--spectrum-picker-spacing-edge-to-disclosure-icon:var(--spectrum-field-end-edge-to-disclosure-icon-100);--spectrum-picker-spacing-edge-to-disclosure-icon-quiet:var(--spectrum-picker-end-edge-to-disclousure-icon-quiet);--spectrum-picker-animation-duration:var(--spectrum-animation-duration-100);--spectrum-picker-font-color-default:var(--spectrum-neutral-content-color-default);--spectrum-picker-font-color-default-open:var(--spectrum-neutral-content-color-focus);--spectrum-picker-font-color-hover:var(--spectrum-neutral-content-color-hover);--spectrum-picker-font-color-hover-open:var(--spectrum-neutral-content-color-focus-hover);--spectrum-picker-font-color-active:var(--spectrum-neutral-content-color-down);--spectrum-picker-font-color-key-focus:var(--spectrum-neutral-content-color-key-focus);--spectrum-picker-icon-color-default:var(--spectrum-neutral-content-color-default);--spectrum-picker-icon-color-default-open:var(--spectrum-neutral-content-color-focus);--spectrum-picker-icon-color-hover:var(--spectrum-neutral-content-color-hover);--spectrum-picker-icon-color-hover-open:var(--spectrum-neutral-content-color-focus-hover);--spectrum-picker-icon-color-active:var(--spectrum-neutral-content-color-down);--spectrum-picker-icon-color-key-focus:var(--spectrum-neutral-content-color-key-focus);--spectrum-picker-border-color-error-default:var(--spectrum-negative-border-color-default);--spectrum-picker-border-color-error-default-open:var(--spectrum-negative-border-color-focus);--spectrum-picker-border-color-error-hover:var(--spectrum-negative-border-color-hover);--spectrum-picker-border-color-error-hover-open:var(--spectrum-negative-border-color-focus-hover);--spectrum-picker-border-color-error-active:var(--spectrum-negative-border-color-down);--spectrum-picker-border-color-error-key-focus:var(--spectrum-negative-border-color-key-focus);--spectrum-picker-icon-color-error:var(--spectrum-negative-visual-color);--spectrum-picker-background-color-disabled:var(--spectrum-disabled-background-color);--spectrum-picker-font-color-disabled:var(--spectrum-disabled-content-color);--spectrum-picker-icon-color-disabled:var(--spectrum-disabled-content-color);--spectrum-picker-focus-indicator-gap:var(--spectrum-focus-indicator-gap);--spectrum-picker-focus-indicator-thickness:var(--spectrum-focus-indicator-thickness);--spectrum-picker-focus-indicator-color:var(--spectrum-focus-indicator-color)}:host([size=s]){--spectrum-picker-font-size:var(--spectrum-font-size-75);--spectrum-picker-block-size:var(--spectrum-component-height-75);--spectrum-picker-spacing-top-to-text-side-label-quiet:var(--spectrum-component-top-to-text-75);--spectrum-picker-spacing-top-to-text:var(--spectrum-component-top-to-text-75);--spectrum-picker-spacing-bottom-to-text:var(--spectrum-component-bottom-to-text-75);--spectrum-picker-spacing-edge-to-text:var(--spectrum-component-edge-to-text-75);--spectrum-picker-spacing-text-to-icon:var(--spectrum-text-to-visual-75);--spectrum-picker-spacing-text-to-icon-inline-end:var(--spectrum-field-text-to-alert-icon-small);--spectrum-picker-spacing-icon-to-disclosure-icon:var(--spectrum-picker-visual-to-disclosure-icon-small);--spectrum-picker-spacing-label-to-picker-quiet:var(--spectrum-field-label-to-component-quiet-small);--spectrum-picker-spacing-top-to-alert-icon:var(--spectrum-field-top-to-alert-icon-small);--spectrum-picker-spacing-top-to-progress-circle:var(--spectrum-field-top-to-progress-circle-small);--spectrum-picker-spacing-top-to-disclosure-icon:var(--spectrum-field-top-to-disclosure-icon-75);--spectrum-picker-spacing-edge-to-disclosure-icon:var(--spectrum-field-end-edge-to-disclosure-icon-75)}:host([size=l]){--spectrum-picker-font-size:var(--spectrum-font-size-200);--spectrum-picker-block-size:var(--spectrum-component-height-200);--spectrum-picker-spacing-top-to-text-side-label-quiet:var(--spectrum-component-top-to-text-200);--spectrum-picker-spacing-top-to-text:var(--spectrum-component-top-to-text-200);--spectrum-picker-spacing-bottom-to-text:var(--spectrum-component-bottom-to-text-200);--spectrum-picker-spacing-edge-to-text:var(--spectrum-component-edge-to-text-200);--spectrum-picker-spacing-text-to-icon:var(--spectrum-text-to-visual-200);--spectrum-picker-spacing-text-to-icon-inline-end:var(--spectrum-field-text-to-alert-icon-large);--spectrum-picker-spacing-icon-to-disclosure-icon:var(--spectrum-picker-visual-to-disclosure-icon-large);--spectrum-picker-spacing-label-to-picker-quiet:var(--spectrum-field-label-to-component-quiet-large);--spectrum-picker-spacing-top-to-alert-icon:var(--spectrum-field-top-to-alert-icon-large);--spectrum-picker-spacing-top-to-progress-circle:var(--spectrum-field-top-to-progress-circle-large);--spectrum-picker-spacing-top-to-disclosure-icon:var(--spectrum-field-top-to-disclosure-icon-200);--spectrum-picker-spacing-edge-to-disclosure-icon:var(--spectrum-field-end-edge-to-disclosure-icon-200)}:host([size=xl]){--spectrum-picker-font-size:var(--spectrum-font-size-300);--spectrum-picker-block-size:var(--spectrum-component-height-300);--spectrum-picker-spacing-top-to-text-side-label-quiet:var(--spectrum-component-top-to-text-300);--spectrum-picker-spacing-top-to-text:var(--spectrum-component-top-to-text-300);--spectrum-picker-spacing-bottom-to-text:var(--spectrum-component-bottom-to-text-300);--spectrum-picker-spacing-edge-to-text:var(--spectrum-component-edge-to-text-300);--spectrum-picker-spacing-text-to-icon:var(--spectrum-text-to-visual-300);--spectrum-picker-spacing-text-to-icon-inline-end:var(--spectrum-field-text-to-alert-icon-extra-large);--spectrum-picker-spacing-icon-to-disclosure-icon:var(--spectrum-picker-visual-to-disclosure-icon-extra-large);--spectrum-picker-spacing-label-to-picker-quiet:var(--spectrum-field-label-to-component-quiet-extra-large);--spectrum-picker-spacing-top-to-alert-icon:var(--spectrum-field-top-to-alert-icon-extra-large);--spectrum-picker-spacing-top-to-progress-circle:var(--spectrum-field-top-to-progress-circle-extra-large);--spectrum-picker-spacing-top-to-disclosure-icon:var(--spectrum-field-top-to-disclosure-icon-300);--spectrum-picker-spacing-edge-to-disclosure-icon:var(--spectrum-field-end-edge-to-disclosure-icon-300)}@media (forced-colors:active){:host{--highcontrast-picker-focus-indicator-color:Highlight;--highcontrast-picker-border-color-default:ButtonBorder;--highcontrast-picker-border-color-hover:Highlight;--highcontrast-picker-border-color-disabled:GrayText;--highcontrast-picker-content-color-default:ButtonText;--highcontrast-picker-content-color-disabled:GrayText;--highcontrast-picker-background-color:ButtonFace}#button.is-keyboardFocused,#button:focus-visible{--highcontrast-picker-border-color-hover:ButtonText}#button .label,#button:after{forced-color-adjust:none}}#button{box-sizing:border-box;max-inline-size:100%;min-inline-size:calc(var(--spectrum-picker-minimum-width-multiplier)*var(--mod-picker-block-size,var(--spectrum-picker-block-size)));inline-size:var(--mod-picker-inline-size,var(--spectrum-picker-inline-size));block-size:var(--mod-picker-block-size,var(--spectrum-picker-block-size));border-width:var(--mod-picker-border-width,var(--spectrum-picker-border-width));border-radius:var(--mod-picker-border-radius,var(--spectrum-picker-border-radius));transition:background-color var(--mod-picker-animation-duration,var(--spectrum-picker-animation-duration)),box-shadow var(--mod-picker-animation-duration,var(--spectrum-picker-animation-duration)),border-color var(--mod-picker-animation-duration,var(--spectrum-picker-animation-duration))ease-in-out;color:var(--highcontrast-picker-content-color-default,var(--mod-picker-font-color-default,var(--spectrum-picker-font-color-default)));background-color:var(--highcontrast-picker-background-color,var(--mod-picker-background-color-default,var(--spectrum-picker-background-color-default)));border-style:solid;border-color:var(--highcontrast-picker-border-color-default,var(--mod-picker-border-color-default,var(--spectrum-picker-border-color-default)));margin-block-start:var(--mod-picker-spacing-label-to-picker,var(--spectrum-picker-spacing-label-to-picker));padding-block:0;padding-inline-start:var(--mod-picker-spacing-edge-to-text,var(--spectrum-picker-spacing-edge-to-text));padding-inline-end:var(--mod-picker-spacing-edge-to-disclosure-icon,var(--spectrum-picker-spacing-edge-to-disclosure-icon));display:flex}#button:after{pointer-events:none;content:\"\";block-size:calc(100% + var(--mod-picker-focus-indicator-gap,var(--spectrum-picker-focus-indicator-gap))*2 + var(--mod-picker-border-width,var(--spectrum-picker-border-width))*2);inline-size:calc(100% + var(--mod-picker-focus-indicator-gap,var(--spectrum-picker-focus-indicator-gap))*2 + var(--mod-picker-border-width,var(--spectrum-picker-border-width))*2);border-style:solid;border-width:var(--mod-picker-focus-indicator-thickness,var(--spectrum-picker-focus-indicator-thickness));border-radius:calc(var(--mod-picker-border-radius,var(--spectrum-picker-border-radius)) + var(--mod-picker-focus-indicator-gap,var(--spectrum-picker-focus-indicator-gap)) + var(--mod-picker-border-width,var(--spectrum-picker-border-width)));border-color:#0000;margin-block-start:calc(( var(--mod-picker-focus-indicator-gap,var(--spectrum-picker-focus-indicator-gap)) + var(--mod-picker-focus-indicator-thickness,var(--spectrum-picker-focus-indicator-thickness)) + var(--mod-picker-border-width,var(--spectrum-picker-border-width)))*-1);margin-inline-start:calc(( var(--mod-picker-focus-indicator-gap,var(--spectrum-picker-focus-indicator-gap)) + var(--mod-picker-focus-indicator-thickness,var(--spectrum-picker-focus-indicator-thickness)) + var(--mod-picker-border-width,var(--spectrum-picker-border-width)))*-1);position:absolute;inset-block:0;inset-inline:0}#button:active{background-color:var(--highcontrast-picker-background-color,var(--mod-picker-background-color-active,var(--spectrum-picker-background-color-active)));border-color:var(--highcontrast-picker-border-color-default,var(--mod-picker-border-active,var(--spectrum-picker-border-color-active)))}#button:active:after{border-color:#0000}#button.placeholder:active .label{color:var(--highcontrast-picker-content-color-default,var(--mod-picker-font-color-active,var(--spectrum-picker-font-color-active)))}#button.is-keyboardFocused,#button:focus-visible{background-color:var(--highcontrast-picker-background-color,var(--mod-picker-background-color-key-focus,var(--spectrum-picker-background-color-key-focus)));border-color:var(--highcontrast-picker-border-color-default,var(--mod-picker-border-color-key-focus,var(--spectrum-picker-border-color-key-focus)));color:var(--highcontrast-picker-content-color-default,var(--mod-picker-font-color-key-focus,var(--spectrum-picker-font-color-key-focus)));outline:none}#button.is-keyboardFocused:after,#button:focus-visible:after{border-color:var(--highcontrast-picker-focus-indicator-color,var(--mod-picker-focus-indicator-color,var(--spectrum-picker-focus-indicator-color)))}#button.is-keyboardFocused.placeholder,#button.placeholder:focus-visible{color:var(--highcontrast-picker-content-color-default,var(--mod-picker-font-color-key-focus,var(--spectrum-picker-font-color-key-focus)))}#button.is-keyboardFocused .picker,#button:focus-visible .picker{color:var(--highcontrast-picker-content-color-default,var(--mod-picker-icon-color-key-focus,var(--spectrum-picker-icon-color-key-focus)))}:host([invalid]) #button:not(:disabled):not(.is-disabled){border-color:var(--highcontrast-picker-border-color-default,var(--mod-picker-border-color-error-default,var(--spectrum-picker-border-color-error-default)))}:host([invalid]) #button:not(:disabled):not(.is-disabled) .validation-icon{color:var(--highcontrast-picker-content-color-default,var(--mod-picker-icon-color-error,var(--spectrum-picker-icon-color-error)))}:host([invalid]) #button:not(:disabled):not(.is-disabled):active{border-color:var(--highcontrast-picker-border-color-default,var(--mod-picker-border-color-error-active,var(--spectrum-picker-border-color-error-active)))}:host([invalid][open]) #button:not(:disabled):not(.is-disabled){border-color:var(--highcontrast-picker-border-color-default,var(--mod-picker-border-color-error-default-open,var(--spectrum-picker-border-color-error-default-open)))}:host([invalid]) #button.is-keyboardFocused:not(:disabled):not(.is-disabled),:host([invalid]) #button:not(:disabled):not(.is-disabled):focus-visible{border-color:var(--highcontrast-picker-border-color-default,var(--mod-picker-border-color-error-key-focus,var(--spectrum-picker-border-color-error-key-focus)))}:host([pending]) #button .picker{color:var(--highcontrast-picker-content-color-disabled,var(--mod-picker-icon-color-disabled,var(--spectrum-picker-icon-color-disabled)))}:host([invalid]) #button .label,:host([pending]) #button .label{margin-inline-end:var(--mod-picker-spacing-text-to-icon-inline-end,var(--mod-picker-spacing-text-to-alert-icon-inline-start,var(--spectrum-picker-spacing-text-to-icon-inline-end)))}:host([disabled]) #button,#button:disabled{cursor:default;background-color:var(--highcontrast-picker-background-color,var(--mod-picker-background-color-disabled,var(--spectrum-picker-background-color-disabled)));border-color:var(--highcontrast-picker-border-color-disabled,transparent);color:var(--highcontrast-picker-content-color-disabled,var(--mod-picker-font-color-disabled,var(--spectrum-picker-font-color-disabled)))}:host([disabled]) #button .icon,:host([disabled]) #button .picker,:host([disabled]) #button .validation-icon,#button:disabled .icon,#button:disabled .picker,#button:disabled .validation-icon{color:var(--highcontrast-picker-content-color-disabled,var(--mod-picker-icon-color-disabled,var(--spectrum-picker-icon-color-disabled)))}:host([disabled]) #button .label.placeholder,#button:disabled .label.placeholder{color:var(--highcontrast-picker-content-color-disabled,var(--mod-picker-font-color-disabled,var(--spectrum-picker-font-color-disabled)))}.icon{flex-shrink:0;margin-inline-end:var(--mod-picker-spacing-text-to-icon,var(--spectrum-picker-spacing-text-to-icon))}:host([open]:not([quiet])) #button{color:var(--highcontrast-picker-content-color-default,var(--mod-picker-font-color-default-open,var(--spectrum-picker-font-color-default-open)));background-color:var(--highcontrast-picker-background-color,var(--mod-picker-background-color-default-open,var(--spectrum-picker-background-color-default-open)));border-color:var(--highcontrast-picker-border-color-default,var(--mod-picker-border-default-open,var(--spectrum-picker-border-color-default-open)))}:host([open]:not([quiet])) #button .picker{color:var(--highcontrast-picker-content-color-default,var(--mod-picker-icon-color-default-open,var(--spectrum-picker-icon-color-default-open)))}.label{white-space:nowrap;font-size:var(--mod-picker-font-size,var(--spectrum-picker-font-size));line-height:var(--mod-picker-line-height,var(--spectrum-picker-line-height));font-weight:var(--mod-picker-font-weight,var(--spectrum-picker-font-weight));text-overflow:ellipsis;text-align:start;flex:auto;margin-block-start:var(--mod-picker-spacing-top-to-text,var(--spectrum-picker-spacing-top-to-text));margin-block-end:calc(var(--mod-picker-spacing-bottom-to-text,var(--spectrum-picker-spacing-bottom-to-text)) - var(--mod-picker-border-width,var(--spectrum-picker-border-width)));overflow:hidden}.label.placeholder{font-weight:var(--mod-picker-placeholder-font-weight,var(--spectrum-picker-font-weight));font-style:var(--mod-picker-placeholder-font-style,var(--spectrum-picker-placeholder-font-style));transition:color var(--mod-picker-animation-duration,var(--spectrum-picker-animation-duration))ease-in-out;color:var(--highcontrast-picker-content-color-default,var(--mod-picker-font-color-default,var(--spectrum-picker-font-color-default)))}.label.placeholder:active{color:var(--highcontrast-picker-content-color-default,var(--mod-picker-font-color-active,var(--spectrum-picker-font-color-active)))}.picker{vertical-align:top;transition:color var(--mod-picker-animation-duration,var(--spectrum-picker-animation-duration))ease-out;margin-inline-start:var(--mod-picker-spacing-icon-to-disclosure-icon,var(--spectrum-picker-spacing-icon-to-disclosure-icon));margin-block:var(--mod-picker-spacing-top-to-disclosure-icon,var(--spectrum-picker-spacing-top-to-disclosure-icon));color:var(--highcontrast-picker-content-color-default,var(--mod-picker-icon-color-default,var(--spectrum-picker-icon-color-default)));flex-shrink:0;display:inline-block;position:relative}.picker:active{color:var(--highcontrast-picker-content-color-default,var(--mod-picker-icon-color-active,var(--spectrum-picker-icon-color-active)))}.validation-icon{margin-block-start:calc(var(--mod-picker-spacing-top-to-alert-icon,var(--spectrum-picker-spacing-top-to-alert-icon)) - var(--mod-picker-border-width,var(--spectrum-picker-border-width)));margin-block-end:calc(var(--mod-picker-spacing-top-to-alert-icon,var(--spectrum-picker-spacing-top-to-alert-icon)) - var(--mod-picker-border-width,var(--spectrum-picker-border-width)))}#button .progress-circle{margin-block-start:calc(var(--mod-picker-spacing-top-to-progress-circle,var(--spectrum-picker-spacing-top-to-progress-circle)) - var(--mod-picker-border-width,var(--spectrum-picker-border-width)));margin-block-end:calc(var(--mod-picker-spacing-top-to-progress-circle,var(--spectrum-picker-spacing-top-to-progress-circle)) - var(--mod-picker-border-width,var(--spectrum-picker-border-width)))}.label~.picker{margin-inline-start:var(--mod-picker-spacing-text-to-icon,var(--spectrum-picker-spacing-text-to-icon))}:host([quiet]) #button{inline-size:auto;min-inline-size:0;padding-inline:var(--mod-picker-spacing-edge-to-text-quiet,var(--spectrum-picker-spacing-edge-to-text-quiet));color:var(--highcontrast-picker-content-color-default,var(--mod-picker-font-color-default,var(--spectrum-picker-font-color-default)));background-color:var(--highcontrast-picker-background-color,transparent);border:none;border-radius:0;margin-block-start:calc(var(--mod-picker-spacing-label-to-picker-quiet,var(--spectrum-picker-spacing-label-to-picker-quiet)) + 1px)}:host([quiet]) #button.label-inline{margin-block-start:0}:host([quiet]) #button .picker{margin-inline-end:var(--mod-picker-spacing-edge-to-disclosure-icon-quiet,var(--spectrum-picker-spacing-edge-to-disclosure-icon-quiet))}:host([quiet]) #button:after{block-size:auto;inline-size:auto;border:none}@media (hover:hover){#button:hover{color:var(--highcontrast-picker-content-color-default,var(--mod-picker-font-color-hover,var(--spectrum-picker-font-color-hover)));background-color:var(--highcontrast-picker-background-color,var(--mod-picker-background-color-hover,var(--spectrum-picker-background-color-hover)));border-color:var(--highcontrast-picker-border-color-hover,var(--mod-picker-border-color-hover,var(--spectrum-picker-border-color-hover)))}#button:hover .picker{color:var(--highcontrast-picker-content-color-default,var(--mod-picker-icon-color-hover,var(--spectrum-picker-icon-color-hover)))}:host([invalid]) #button:not(:disabled):not(.is-disabled):hover{border-color:var(--highcontrast-picker-border-color-hover,var(--mod-picker-border-color-error-hover,var(--spectrum-picker-border-color-error-hover)))}:host([invalid][open]) #button:not(:disabled):not(.is-disabled):hover{border-color:var(--highcontrast-picker-border-color-hover,var(--mod-picker-border-color-error-hover-open,var(--spectrum-picker-border-color-error-hover-open)))}:host([open]:not([quiet])) #button:hover{color:var(--highcontrast-picker-content-color-default,var(--mod-picker-font-color-hover-open,var(--spectrum-picker-font-color-hover-open)));background-color:var(--highcontrast-picker-background-color,var(--mod-picker-background-color-hover-open,var(--spectrum-picker-background-color-hover-open)));border-color:var(--highcontrast-picker-border-color-hover,var(--mod-picker-border-color-hover-open,var(--spectrum-picker-border-color-hover-open)))}:host([open]:not([quiet])) #button:hover .picker{color:var(--highcontrast-picker-content-color-default,var(--mod-picker-icon-color-hover-open,var(--spectrum-picker-icon-color-hover-open)))}.label.placeholder:hover{color:var(--highcontrast-picker-content-color-default,var(--mod-picker-font-color-hover,var(--spectrum-picker-font-color-hover)))}:host([quiet]) #button:hover{background-color:var(--highcontrast-picker-background-color,transparent)}}:host([quiet]) #button.is-keyboardFocused,:host([quiet]) #button:focus-visible{background-color:var(--highcontrast-picker-background-color,transparent)}:host([quiet]) #button.is-keyboardFocused:after,:host([quiet]) #button:focus-visible:after{box-shadow:0 var(--mod-picker-focus-indicator-thickness,var(--spectrum-picker-focus-indicator-thickness))0 0 var(--highcontrast-picker-focus-indicator-color,var(--mod-picker-focus-indicator-color,var(--spectrum-picker-focus-indicator-color)));margin:calc(( var(--mod-picker-focus-indicator-gap,var(--spectrum-picker-focus-indicator-gap)) + var(--mod-picker-border-width,var(--spectrum-picker-border-width)))*-1)0;border:none;border-radius:0}:host([quiet][disabled]) #button,:host([quiet][open]) #button,:host([quiet]) #button:active,:host([quiet]) #button:disabled{background-color:var(--highcontrast-picker-background-color,transparent)}.label-inline{vertical-align:top;display:inline-flex}:host{--spectrum-picker-background-color-default:var(--system-spectrum-picker-background-color-default);--spectrum-picker-background-color-default-open:var(--system-spectrum-picker-background-color-default-open);--spectrum-picker-background-color-active:var(--system-spectrum-picker-background-color-active);--spectrum-picker-background-color-hover:var(--system-spectrum-picker-background-color-hover);--spectrum-picker-background-color-hover-open:var(--system-spectrum-picker-background-color-hover-open);--spectrum-picker-background-color-key-focus:var(--system-spectrum-picker-background-color-key-focus);--spectrum-picker-border-color-default:var(--system-spectrum-picker-border-color-default);--spectrum-picker-border-color-default-open:var(--system-spectrum-picker-border-color-default-open);--spectrum-picker-border-color-hover:var(--system-spectrum-picker-border-color-hover);--spectrum-picker-border-color-hover-open:var(--system-spectrum-picker-border-color-hover-open);--spectrum-picker-border-color-active:var(--system-spectrum-picker-border-color-active);--spectrum-picker-border-color-key-focus:var(--system-spectrum-picker-border-color-key-focus);--spectrum-picker-border-width:var(--system-spectrum-picker-border-width)}:host{vertical-align:top;max-inline-size:100%;inline-size:var(--mod-picker-inline-size,var(--spectrum-picker-inline-size));min-inline-size:calc(var(--spectrum-picker-minimum-width-multiplier)*var(--mod-picker-block-size,var(--spectrum-picker-block-size)));display:inline-flex}:host([quiet]){width:auto;min-width:0}:host([disabled]){pointer-events:none}#button{width:100%;min-width:100%;max-width:100%}#icon:not([hidden]){display:inline-flex}:host([readonly]) #button{user-select:inherit}.picker,.validation-icon{flex-shrink:0}sp-overlay{pointer-events:none}sp-menu{pointer-events:initial}:host>sp-menu{display:none}:host([focused]:not([quiet])) #button #label.placeholder{color:var(--spectrum-picker-placeholder-text-color-key-focus,var(--spectrum-alias-placeholder-text-color-hover))}#label.visually-hidden~.picker{margin-inline-start:auto}:host([focused]:not([quiet],[pending])) #button .picker{color:var(--spectrum-picker-icon-color-key-focus,var(--spectrum-alias-icon-color-focus))}.visually-hidden{clip:rect(0,0,0,0);clip-path:inset(50%);height:1px;width:1px;white-space:nowrap;border:0;margin:0 -1px -1px 0;padding:0;position:absolute;overflow:hidden}sp-overlay:not(:defined){display:none}\n`;\nexport default styles;", "/*\nCopyright 2024 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\n\nimport {\n    ReactiveController,\n    TemplateResult,\n} from '@spectrum-web-components/base';\nimport { AbstractOverlay } from '@spectrum-web-components/overlay/src/AbstractOverlay';\nimport { Overlay } from '@spectrum-web-components/overlay/src/Overlay.js';\nimport { PickerBase } from './Picker.js';\n\nexport enum InteractionTypes {\n    'desktop',\n    'mobile',\n}\n\nexport class InteractionController implements ReactiveController {\n    abortController!: AbortController;\n\n    public preventNextToggle: 'no' | 'maybe' | 'yes' = 'no';\n    public pointerdownState = false;\n    public enterKeydownOn: EventTarget | null = null;\n\n    public container!: TemplateResult;\n\n    get activelyOpening(): boolean {\n        return false;\n    }\n\n    private _open = false;\n\n    public get open(): boolean {\n        return this._open;\n    }\n\n    /**\n     * Set `open`\n     */\n    public set open(open: boolean) {\n        if (this._open === open) return;\n        this._open = open;\n\n        if (this.overlay) {\n            this.host.open = open;\n            return;\n        }\n\n        // When there is no Overlay and `open` is moving to `true`, lazily import/create\n        // an Overlay and apply that state to it.\n        customElements\n            .whenDefined('sp-overlay')\n            .then(async (): Promise<void> => {\n                const { Overlay } = await import(\n                    '@spectrum-web-components/overlay/src/Overlay.js'\n                );\n                this.overlay = new Overlay();\n                this.host.open = true;\n                this.host.requestUpdate();\n            });\n        import('@spectrum-web-components/overlay/sp-overlay.js');\n    }\n\n    private _overlay!: AbstractOverlay;\n\n    public get overlay(): AbstractOverlay {\n        return this._overlay;\n    }\n\n    public set overlay(overlay: AbstractOverlay | undefined) {\n        if (!overlay) return;\n        if (this.overlay === overlay) return;\n        this._overlay = overlay;\n        this.initOverlay();\n    }\n\n    type!: InteractionTypes;\n\n    constructor(\n        public target: HTMLElement,\n        public host: PickerBase\n    ) {\n        this.target = target;\n        this.host = host;\n        this.host.addController(this);\n        this.init();\n    }\n\n    releaseDescription(): void {}\n\n    protected handleBeforetoggle(\n        event: Event & {\n            target: Overlay;\n            newState: 'open' | 'closed';\n        }\n    ): void {\n        if (event.composedPath()[0] !== event.target) {\n            return;\n        }\n        if (event.newState === 'closed') {\n            if (this.preventNextToggle === 'no') {\n                this.open = false;\n            } else if (!this.pointerdownState) {\n                // Prevent browser driven closure while opening the Picker\n                // and the expected event series has not completed.\n                this.overlay?.manuallyKeepOpen();\n            }\n        }\n        if (!this.open) {\n            this.host.optionsMenu.updateSelectedItemIndex();\n            this.host.optionsMenu.closeDescendentOverlays();\n        }\n    }\n\n    initOverlay(): void {\n        if (this.overlay) {\n            this.overlay.addEventListener('beforetoggle', (event: Event) => {\n                this.handleBeforetoggle(\n                    event as Event & {\n                        target: Overlay;\n                        newState: 'open' | 'closed';\n                    }\n                );\n            });\n\n            this.overlay.triggerElement = this.host as HTMLElement;\n            this.overlay.placement = this.host.isMobile.matches\n                ? undefined\n                : this.host.placement;\n            this.overlay.receivesFocus = 'true';\n            this.overlay.willPreventClose =\n                this.preventNextToggle !== 'no' && this.open;\n            this.overlay.addEventListener(\n                'slottable-request',\n                this.host.handleSlottableRequest\n            );\n        }\n    }\n\n    public handlePointerdown(_event: PointerEvent): void {}\n\n    public handleButtonFocus(event: FocusEvent): void {\n        // When focus comes from a pointer event, and the related target is the Menu,\n        // we don't want to reopen the Menu.\n        if (\n            this.preventNextToggle === 'maybe' &&\n            event.relatedTarget === this.host.optionsMenu\n        ) {\n            this.preventNextToggle = 'yes';\n        }\n    }\n\n    public handleActivate(_event: Event): void {}\n\n    /* c8 ignore next 3 */\n    init(): void {}\n\n    abort(): void {\n        this.releaseDescription();\n        this.abortController?.abort();\n    }\n\n    hostConnected(): void {\n        this.init();\n    }\n\n    hostDisconnected(): void {\n        this.abortController?.abort();\n    }\n\n    public hostUpdated(): void {\n        if (\n            this.overlay &&\n            this.host.dependencyManager.loaded &&\n            this.host.open !== this.overlay.open\n        ) {\n            this.overlay.willPreventClose = this.preventNextToggle !== 'no';\n            this.overlay.open = this.host.open;\n        }\n    }\n}\n", "/*\nCopyright 2024 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\n\nimport {\n    InteractionController,\n    InteractionTypes,\n} from './InteractionController.js';\n\nexport class DesktopController extends InteractionController {\n    override type = InteractionTypes.desktop;\n\n    public override handlePointerdown(event: PointerEvent): void {\n        if (event.button !== 0) {\n            return;\n        }\n        this.pointerdownState = this.open;\n        this.preventNextToggle = 'maybe';\n        let cleanupAction = 0;\n        const cleanup = (): void => {\n            cancelAnimationFrame(cleanupAction);\n            cleanupAction = requestAnimationFrame(async () => {\n                document.removeEventListener('pointerup', cleanup);\n                document.removeEventListener('pointercancel', cleanup);\n                this.target.removeEventListener('click', cleanup);\n                requestAnimationFrame(() => {\n                    // Complete cleanup on the second animation frame so that `click` can go first.\n                    this.preventNextToggle = 'no';\n                });\n            });\n        };\n        // Ensure that however the pointer goes up we do `cleanup()`.\n        document.addEventListener('pointerup', cleanup);\n        document.addEventListener('pointercancel', cleanup);\n        this.target.addEventListener('click', cleanup);\n        this.handleActivate();\n    }\n\n    public override handleActivate(event?: Event): void {\n        if (this.enterKeydownOn && this.enterKeydownOn !== this.target) {\n            return;\n        }\n        if (this.preventNextToggle === 'yes') {\n            return;\n        }\n        if (event?.type === 'click' && this.open !== this.pointerdownState) {\n            // When activation comes from a `click` event ensure that the `pointerup`\n            // event didn't already toggle the Picker state before doing so.\n            return;\n        }\n        this.host.toggle();\n    }\n\n    override init(): void {\n        // Clean up listeners if they've already been bound\n        this.abortController?.abort();\n        this.abortController = new AbortController();\n        const { signal } = this.abortController;\n        this.target.addEventListener(\n            'click',\n            (event: Event) => this.handleActivate(event),\n            {\n                signal,\n            }\n        );\n        this.target.addEventListener(\n            'pointerdown',\n            (event: PointerEvent) => this.handlePointerdown(event),\n            { signal }\n        );\n        this.target.addEventListener(\n            'focus',\n            (event: FocusEvent) => this.handleButtonFocus(event),\n            {\n                signal,\n            }\n        );\n    }\n}\n", "/*\nCopyright 2024 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\n\nimport {\n    InteractionController,\n    InteractionTypes,\n} from './InteractionController.js';\n\nexport class MobileController extends InteractionController {\n    override type = InteractionTypes.mobile;\n\n    handleClick(): void {\n        if (this.preventNextToggle == 'no') {\n            this.open = !this.open;\n        }\n        this.preventNextToggle = 'no';\n    }\n\n    public override handlePointerdown(): void {\n        this.preventNextToggle = this.open ? 'yes' : 'no';\n    }\n\n    override init(): void {\n        // Clean up listeners if they've already been bound\n        this.abortController?.abort();\n        this.abortController = new AbortController();\n        const { signal } = this.abortController;\n        this.target.addEventListener('click', () => this.handleClick(), {\n            signal,\n        });\n        this.target.addEventListener(\n            'pointerdown',\n            () => this.handlePointerdown(),\n            { signal }\n        );\n        this.target.addEventListener(\n            'focus',\n            (event: FocusEvent) => this.handleButtonFocus(event),\n            {\n                signal,\n            }\n        );\n    }\n}\n", "/*\nCopyright 2024 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\n\nimport { DesktopController } from './DesktopController.js';\nimport { MobileController } from './MobileController.js';\n\nexport const strategies = {\n    desktop: DesktopController,\n    mobile: MobileController,\n};\n", "/*\nCopyright 2020 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\n\nimport { Picker } from './src/Picker.js';\nimport { defineElement } from '@spectrum-web-components/base/src/define-element.js';\n\ndefineElement('sp-picker', Picker);\n\ndeclare global {\n    interface HTMLElementTagNameMap {\n        'sp-picker': Picker;\n    }\n}\n"],
  "mappings": "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",
  "names": ["html", "nothing", "render", "SizedMixin", "classMap", "ifDefined", "styleMap", "when", "property", "query", "state", "css", "styles", "chevronStyles", "Focusable", "IS_MOBILE", "MatchMediaController", "DependencyManagerController", "InteractionTypes", "target", "host", "open", "Overlay", "overlay", "event", "_a", "_event", "InteractionController", "InteractionTypes", "event", "cleanupAction", "cleanup", "_a", "signal", "InteractionController", "InteractionTypes", "_a", "signal", "event", "DesktopController", "MobileController", "chevronClass", "SizedMixin", "Focusable", "MatchMediaController", "IS_MOBILE", "DependencyManagerController", "event", "_event", "value", "labelElement", "keyupEvent", "selectedItem", "oldSelectedItem", "options", "target", "selected", "_a", "item", "menuChangeEvent", "oldValue", "selectedItemContent", "oldContent", "content", "html", "ifDefined", "labelClasses", "appliedLabel", "classMap", "nothing", "when", "menu", "_b", "_c", "container", "render", "changes", "accessibleMenu", "styleMap", "res", "complete", "strategies", "__decorateClass", "state", "query", "property", "code", "selectedIndex", "nextOffset", "nextIndex", "pickerStyles", "chevronStyles", "styles", "defineElement", "Picker"]
}
