{
  "version": 3,
  "sources": ["../node_modules/@spectrum-web-components/tooltip/src/Tooltip.ts", "../node_modules/@spectrum-web-components/tooltip/src/tooltip.css.ts", "../node_modules/@spectrum-web-components/tooltip/sp-tooltip.ts"],
  "sourcesContent": ["/*\nCopyright 2020 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\n\nimport {\n    CSSResultArray,\n    html,\n    SpectrumElement,\n    TemplateResult,\n} from '@spectrum-web-components/base';\nimport {\n    property,\n    query,\n} from '@spectrum-web-components/base/src/decorators.js';\nimport { ifDefined } from '@spectrum-web-components/base/src/directives.js';\nimport type {\n    Overlay,\n    OverlayOpenCloseDetail,\n    Placement,\n} from '@spectrum-web-components/overlay';\n\nimport tooltipStyles from './tooltip.css.js';\nimport { focusableSelector } from '@spectrum-web-components/shared/src/focusable-selectors.js';\nimport { DependencyManagerController } from '@spectrum-web-components/reactive-controllers/src/DependencyManger.js';\n\nclass TooltipOpenable extends HTMLElement {\n    constructor() {\n        super();\n        this.addEventListener('sp-opened', this.redispatchEvent);\n        this.addEventListener('sp-closed', this.redispatchEvent);\n    }\n    redispatchEvent(event: Event): void {\n        event.stopPropagation();\n        this.tooltip.dispatchEvent(\n            new CustomEvent<OverlayOpenCloseDetail>(event.type, {\n                bubbles: event.bubbles,\n                composed: event.composed,\n                detail: (event as CustomEvent<OverlayOpenCloseDetail>).detail,\n            })\n        );\n    }\n    get tooltip(): Tooltip {\n        return (this.getRootNode() as ShadowRoot).host as Tooltip;\n    }\n    static get observedAttributes(): string[] {\n        return ['open', 'placement'];\n    }\n    attributeChangedCallback(\n        name: 'open' | 'placement',\n        _oldValue: string,\n        newValue: 'string'\n    ): void {\n        switch (name) {\n            // API generally sets `open` as a property\n            /* c8 ignore next 3 */\n            case 'open':\n                this.open = newValue !== null;\n                break;\n            case 'placement':\n                this.placement = newValue as Placement;\n                break;\n        }\n    }\n    set open(open: boolean) {\n        this._open = open;\n        const { tooltip } = this;\n        /* c8 ignore next 3 */\n        if (!tooltip) {\n            return;\n        }\n        tooltip.open = open;\n    }\n    /* c8 ignore next 3 */\n    get open(): boolean {\n        return this._open;\n    }\n    private _open = false;\n    /**\n     * @type {\"top\" | \"top-start\" | \"top-end\" | \"right\" | \"right-start\" | \"right-end\" | \"bottom\" | \"bottom-start\" | \"bottom-end\" | \"left\" | \"left-start\" | \"left-end\"}\n     * @attr\n     */\n    set placement(placement: Placement) {\n        this._placement = placement;\n        const { tooltip } = this;\n        if (!tooltip) {\n            return;\n        }\n        tooltip.placement = placement;\n    }\n    /* c8 ignore next 3 */\n    get placement(): Placement {\n        return this._placement;\n    }\n    private _placement: Placement = 'top';\n    get tipElement(): HTMLElement {\n        return this.tooltip.tipElement;\n    }\n}\n\nif (!customElements.get('sp-tooltip-openable')) {\n    customElements.define('sp-tooltip-openable', TooltipOpenable);\n}\n\n/**\n * @element sp-tooltip\n *\n * @slot icon - the icon element appearing at the start of the label\n * @slot - the text label of the Tooltip\n */\nexport class Tooltip extends SpectrumElement {\n    public static override get styles(): CSSResultArray {\n        return [tooltipStyles];\n    }\n\n    /**\n     * A Tooltip that is `delayed` will its Overlay wait until a warm-up period of\n     * 1000ms has completed before opening. Once the warmup period has completed, all\n     * subsequent Overlays will open immediately. When no Overlays are opened, a\n     * cooldown period of 1000ms will begin. Once the cooldown has completed, the next\n     * Overlay to be opened will be subject to the warm-up period if provided that option.\n     */\n    @property({ type: Boolean })\n    delayed = false;\n\n    private dependencyManager = new DependencyManagerController(this);\n\n    /**\n     * Whether to prevent a self-managed Tooltip from responding to user input.\n     */\n    @property({ type: Boolean })\n    disabled = false;\n\n    /**\n     * Automatically bind to the parent element of the assigned `slot` or the parent element of the `sp-tooltip`.\n     * Without this, you must provide your own `overlay-trigger`.\n     */\n    @property({ type: Boolean, attribute: 'self-managed' })\n    public selfManaged = false;\n\n    @property({ type: Number })\n    public offset = 0;\n\n    @property({ type: Boolean, reflect: true })\n    public open = false;\n\n    @query('sp-overlay')\n    public overlayElement?: Overlay;\n\n    /**\n     * @type {\"top\" | \"top-start\" | \"top-end\" | \"right\" | \"right-start\" | \"right-end\" | \"bottom\" | \"bottom-start\" | \"bottom-end\" | \"left\" | \"left-start\" | \"left-end\"}\n     * @attr\n     */\n    @property({ reflect: true })\n    public placement?: Placement;\n\n    @query('#tip')\n    public tipElement!: HTMLSpanElement;\n\n    @property({ type: Number })\n    public tipPadding?: number;\n\n    /* Ensure that a '' value for `variant` removes the attribute instead of a blank value */\n    private _variant = '';\n\n    @property({ type: String })\n    public get variant(): string {\n        return this._variant;\n    }\n    public set variant(variant: string) {\n        if (variant === this.variant) {\n            return;\n        }\n        if (['info', 'positive', 'negative'].includes(variant)) {\n            this.setAttribute('variant', variant);\n            this._variant = variant;\n            return;\n        }\n        this.removeAttribute('variant');\n        this._variant = '';\n    }\n\n    private handleOpenOverlay = (): void => {\n        this.open = true;\n    };\n\n    protected handleCloseOverlay = (): void => {\n        this.open = false;\n    };\n\n    protected forwardTransitionEvent(event: TransitionEvent): void {\n        this.dispatchEvent(\n            new TransitionEvent(event.type, {\n                bubbles: true,\n                composed: true,\n                propertyName: event.propertyName,\n            })\n        );\n    }\n\n    private get triggerElement(): HTMLElement | null {\n        // Resolve the parent element of the assigned slot (if one exists) or of the Tooltip.\n        let start: HTMLElement = this.assignedSlot || this;\n        let root = start.getRootNode();\n        if (root === document) {\n            if (window.__swc.DEBUG) {\n                window.__swc.warn(\n                    this,\n                    `Self managed <${this.localName}> elements walk up the composed tree to acquire a trigger element. No trigger element was found before the document.`,\n                    'https://opensource.adobe.com/spectrum-web-components/components/tooltip#self-managed-overlays',\n                    {\n                        level: 'high',\n                    }\n                );\n            }\n            return null;\n        }\n        let triggerElement = (start.parentElement ||\n            (root as ShadowRoot).host ||\n            /* c8 ignore next 1 */\n            root) as HTMLElement;\n        while (!triggerElement?.matches?.(focusableSelector)) {\n            start =\n                triggerElement.assignedSlot || (triggerElement as HTMLElement);\n            root = start.getRootNode();\n            /* c8 ignore next 13 */\n            if (root === document) {\n                if (window.__swc.DEBUG) {\n                    window.__swc.warn(\n                        this,\n                        `Self managed <${this.localName}> elements walk up the composed tree to acquire a trigger element. No trigger element was found before the document.`,\n                        'https://opensource.adobe.com/spectrum-web-components/components/tooltip#self-managed-overlays',\n                        {\n                            level: 'high',\n                        }\n                    );\n                }\n                return null;\n            }\n            triggerElement = (start.parentElement ||\n                (root as ShadowRoot).host ||\n                /* c8 ignore next 1 */\n                root) as HTMLElement;\n        }\n        return triggerElement;\n    }\n\n    override render(): TemplateResult {\n        const tooltip = html`\n            <sp-tooltip-openable\n                id=\"tooltip\"\n                placement=${ifDefined(this.placement)}\n                @transitionrun=${this.forwardTransitionEvent}\n                @transitionend=${this.forwardTransitionEvent}\n                @transitioncancel=${this.forwardTransitionEvent}\n            >\n                <slot name=\"icon\"></slot>\n                <span id=\"label\"><slot></slot></span>\n                <span id=\"tip\" aria-hidden=\"true\"></span>\n            </sp-tooltip-openable>\n        `;\n        if (this.selfManaged) {\n            this.dependencyManager.add('sp-overlay');\n            import('@spectrum-web-components/overlay/sp-overlay.js');\n            return html`\n                <sp-overlay\n                    ?open=${this.open &&\n                    !this.disabled &&\n                    this.dependencyManager.loaded}\n                    ?delayed=${this.delayed}\n                    ?disabled=${this.disabled}\n                    offset=${this.offset}\n                    .placement=${this.placement}\n                    type=\"hint\"\n                    .tipPadding=${this.tipPadding}\n                    .triggerInteraction=${'hover'}\n                    @sp-opened=${this.handleOpenOverlay}\n                    @sp-closed=${this.handleCloseOverlay}\n                >\n                    ${tooltip}\n                </sp-overlay>\n            `;\n        } else {\n            return tooltip;\n        }\n    }\n\n    public override connectedCallback(): void {\n        super.connectedCallback();\n\n        this.updateComplete.then(() => {\n            if (!this.selfManaged) {\n                return;\n            }\n            const overlayElement = this.overlayElement;\n            if (overlayElement) {\n                const triggerElement = this.triggerElement;\n                overlayElement.triggerElement = triggerElement;\n            }\n        });\n    }\n}\n", "/*\nCopyright 2024 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\nimport { css } from '@spectrum-web-components/base';\nconst styles = css`\n    #tooltip{pointer-events:none;visibility:hidden;opacity:0;transition:transform var(--mod-overlay-animation-duration,var(--spectrum-animation-duration-100,.13s))ease-in-out,opacity var(--mod-overlay-animation-duration,var(--spectrum-animation-duration-100,.13s))ease-in-out,visibility 0s linear var(--mod-overlay-animation-duration,var(--spectrum-animation-duration-100,.13s))}:host([open]) #tooltip{pointer-events:auto;visibility:visible;opacity:1;transition-delay:var(--mod-overlay-animation-duration-opened,var(--spectrum-animation-duration-0,0s))}#tooltip{--spectrum-tooltip-animation-duration:var(--spectrum-animation-duration-100);--spectrum-tooltip-margin:0px;--spectrum-tooltip-height:var(--spectrum-component-height-75);--spectrum-tooltip-max-inline-size:var(--spectrum-tooltip-maximum-width);--spectrum-tooltip-border-radius:var(--spectrum-corner-radius-100);--spectrum-tooltip-icon-width:var(--spectrum-workflow-icon-size-50);--spectrum-tooltip-icon-height:var(--spectrum-workflow-icon-size-50);--spectrum-tooltip-font-size:var(--spectrum-font-size-75);--spectrum-tooltip-line-height:var(--spectrum-line-height-100);--spectrum-tooltip-cjk-line-height:var(--spectrum-cjk-line-height-100);--spectrum-tooltip-font-weight:var(--spectrum-regular-font-weight);--spectrum-tooltip-spacing-inline:var(--spectrum-component-edge-to-text-75);--spectrum-tooltip-spacing-block-start:var(--spectrum-component-top-to-text-75);--spectrum-tooltip-spacing-block-end:var(--spectrum-component-bottom-to-text-75);--spectrum-tooltip-icon-spacing-inline-start:var(--spectrum-text-to-visual-75);--spectrum-tooltip-icon-spacing-inline-end:var(--spectrum-text-to-visual-75);--spectrum-tooltip-icon-spacing-block-start:var(--spectrum-component-top-to-workflow-icon-75);--spectrum-tooltip-background-color-informative:var(--spectrum-informative-background-color-default);--spectrum-tooltip-background-color-positive:var(--spectrum-positive-background-color-default);--spectrum-tooltip-background-color-negative:var(--spectrum-negative-background-color-default);--spectrum-tooltip-content-color:var(--spectrum-white);--spectrum-tooltip-tip-inline-size:var(--spectrum-tooltip-tip-width);--spectrum-tooltip-tip-block-size:var(--spectrum-tooltip-tip-height);--spectrum-tooltip-tip-square-size:var(--spectrum-tooltip-tip-inline-size);--spectrum-tooltip-tip-height-percentage:50%;--spectrum-tooltip-tip-antialiasing-inset:.5px;--spectrum-tooltip-pointer-corner-spacing:var(--spectrum-corner-radius-100);--spectrum-tooltip-background-color-default:var(--spectrum-tooltip-backgound-color-default-neutral)}@media (forced-colors:active){#tooltip{border:1px solid #0000}#tip{forced-color-adjust:none;--highcontrast-tooltip-background-color-default:CanvasText;--highcontrast-tooltip-background-color-informative:CanvasText;--highcontrast-tooltip-background-color-positive:CanvasText;--highcontrast-tooltip-background-color-negative:CanvasText}}#tooltip{box-sizing:border-box;vertical-align:top;inline-size:auto;padding-inline:var(--mod-tooltip-spacing-inline,var(--spectrum-tooltip-spacing-inline));border-radius:var(--mod-tooltip-border-radius,var(--spectrum-tooltip-border-radius));block-size:auto;min-block-size:var(--mod-tooltip-height,var(--spectrum-tooltip-height));max-inline-size:var(--mod-tooltip-max-inline-size,var(--spectrum-tooltip-max-inline-size));background-color:var(--highcontrast-tooltip-background-color-default,var(--mod-tooltip-background-color-default,var(--spectrum-tooltip-background-color-default)));color:var(--mod-tooltip-content-color,var(--spectrum-tooltip-content-color));font-size:var(--mod-tooltip-font-size,var(--spectrum-tooltip-font-size));font-weight:var(--mod-tooltip-font-weight,var(--spectrum-tooltip-font-weight));line-height:var(--mod-tooltip-line-height,var(--spectrum-tooltip-line-height));word-break:break-word;-webkit-font-smoothing:antialiased;cursor:default;-webkit-user-select:none;user-select:none;flex-direction:row;align-items:center;display:inline-flex;position:relative}:host(:lang(ja)) #tooltip,:host(:lang(ko)) #tooltip,:host(:lang(zh)) #tooltip{line-height:var(--mod-tooltip-cjk-line-height,var(--spectrum-tooltip-cjk-line-height))}#tooltip p{margin:0}:host([variant=info]) #tooltip{background-color:var(--highcontrast-tooltip-background-color-informative,var(--mod-tooltip-background-color-informative,var(--spectrum-tooltip-background-color-informative)))}:host([variant=positive]) #tooltip{background-color:var(--highcontrast-tooltip-background-color-positive,var(--mod-tooltip-background-color-positive,var(--spectrum-tooltip-background-color-positive)))}:host([variant=negative]) #tooltip{background-color:var(--highcontrast-tooltip-background-color-negative,var(--mod-tooltip-background-color-negative,var(--spectrum-tooltip-background-color-negative)))}#tip{block-size:var(--mod-tooltip-tip-square-size,var(--spectrum-tooltip-tip-square-size));inline-size:var(--mod-tooltip-tip-square-size,var(--spectrum-tooltip-tip-square-size));background-color:var(--highcontrast-tooltip-background-color-default,var(--mod-tooltip-background-color-default,var(--spectrum-tooltip-background-color-default)));clip-path:polygon(0 calc(0% - var(--mod-tooltip-tip-antialiasing-inset,var(--spectrum-tooltip-tip-antialiasing-inset))),50% var(--mod-tooltip-tip-height-percentage,var(--spectrum-tooltip-tip-height-percentage)),100% calc(0% - var(--mod-tooltip-tip-antialiasing-inset,var(--spectrum-tooltip-tip-antialiasing-inset))));inset-block-start:100%;position:absolute;left:50%;transform:translate(-50%)}:host([variant=info]) #tooltip #tip{background-color:var(--highcontrast-tooltip-background-color-informative,var(--mod-tooltip-background-color-informative,var(--spectrum-tooltip-background-color-informative)))}:host([variant=positive]) #tooltip #tip{background-color:var(--highcontrast-tooltip-background-color-positive,var(--mod-tooltip-background-color-positive,var(--spectrum-tooltip-background-color-positive)))}:host([variant=negative]) #tooltip #tip{background-color:var(--highcontrast-tooltip-background-color-negative,var(--mod-tooltip-background-color-negative,var(--spectrum-tooltip-background-color-negative)))}:host([placement*=top]) #tooltip #tip,.spectrum-Tooltip--top-end #tip,.spectrum-Tooltip--top-left #tip,.spectrum-Tooltip--top-right #tip,.spectrum-Tooltip--top-start #tip{inset-block-start:100%}:host([placement*=bottom]) #tooltip #tip,.spectrum-Tooltip--bottom-end #tip,.spectrum-Tooltip--bottom-left #tip,.spectrum-Tooltip--bottom-right #tip,.spectrum-Tooltip--bottom-start #tip{clip-path:polygon(50% calc(100% - var(--mod-tooltip-tip-height-percentage,var(--spectrum-tooltip-tip-height-percentage))),0 calc(100% + var(--mod-tooltip-tip-antialiasing-inset,var(--spectrum-tooltip-tip-antialiasing-inset))),100% calc(100% + var(--mod-tooltip-tip-antialiasing-inset,var(--spectrum-tooltip-tip-antialiasing-inset))));inset-block:auto 100%}.spectrum-Tooltip--bottom-end #tip,.spectrum-Tooltip--bottom-left #tip,.spectrum-Tooltip--bottom-right #tip,.spectrum-Tooltip--bottom-start #tip,.spectrum-Tooltip--top-end #tip,.spectrum-Tooltip--top-left #tip,.spectrum-Tooltip--top-right #tip,.spectrum-Tooltip--top-start #tip{transform:none}.spectrum-Tooltip--bottom-left #tip,.spectrum-Tooltip--top-left #tip{inset-inline-start:var(--mod-tooltip-pointer-corner-spacing,var(--spectrum-tooltip-pointer-corner-spacing))}.spectrum-Tooltip--bottom-right #tip,.spectrum-Tooltip--top-right #tip{inset-inline:auto var(--mod-tooltip-pointer-corner-spacing,var(--spectrum-tooltip-pointer-corner-spacing))}.spectrum-Tooltip--bottom-start #tip,.spectrum-Tooltip--top-start #tip{inset-inline:var(--mod-tooltip-pointer-corner-spacing,var(--spectrum-tooltip-pointer-corner-spacing))auto}.spectrum-Tooltip--bottom-start #tip:dir(rtl),.spectrum-Tooltip--top-start #tip:dir(rtl),:host([dir=rtl]) .spectrum-Tooltip--bottom-start #tip,:host([dir=rtl]) .spectrum-Tooltip--top-start #tip{right:var(--mod-tooltip-pointer-corner-spacing,var(--spectrum-tooltip-pointer-corner-spacing));left:auto}.spectrum-Tooltip--bottom-end #tip,.spectrum-Tooltip--top-end #tip{inset-inline:auto var(--mod-tooltip-pointer-corner-spacing,var(--spectrum-tooltip-pointer-corner-spacing))}.spectrum-Tooltip--bottom-end #tip:dir(rtl),.spectrum-Tooltip--top-end #tip:dir(rtl),:host([dir=rtl]) .spectrum-Tooltip--bottom-end #tip,:host([dir=rtl]) .spectrum-Tooltip--top-end #tip{left:var(--mod-tooltip-pointer-corner-spacing,var(--spectrum-tooltip-pointer-corner-spacing));right:auto}.spectrum-Tooltip--end #tip,.spectrum-Tooltip--end-bottom #tip,.spectrum-Tooltip--end-top #tip,:host([placement*=left]) #tooltip #tip,.spectrum-Tooltip--left-bottom #tip,.spectrum-Tooltip--left-top #tip,:host([placement*=right]) #tooltip #tip,.spectrum-Tooltip--right-bottom #tip,.spectrum-Tooltip--right-top #tip,.spectrum-Tooltip--start #tip,.spectrum-Tooltip--start-bottom #tip,.spectrum-Tooltip--start-top #tip{inset-block-start:50%;transform:translateY(-50%)}.spectrum-Tooltip--end-bottom #tip,.spectrum-Tooltip--end-top #tip,.spectrum-Tooltip--left-bottom #tip,.spectrum-Tooltip--left-top #tip,.spectrum-Tooltip--right-bottom #tip,.spectrum-Tooltip--right-top #tip,.spectrum-Tooltip--start-bottom #tip,.spectrum-Tooltip--start-top #tip{inset-block-start:auto;transform:none}.spectrum-Tooltip--end #tip,.spectrum-Tooltip--end-bottom #tip,.spectrum-Tooltip--end-top #tip,:host([placement*=right]) #tooltip #tip,.spectrum-Tooltip--right-bottom #tip,.spectrum-Tooltip--right-top #tip{clip-path:polygon(calc(100% - var(--mod-tooltip-tip-height-percentage,var(--spectrum-tooltip-tip-height-percentage)))50%,calc(100% + var(--mod-tooltip-tip-antialiasing-inset,var(--spectrum-tooltip-tip-antialiasing-inset)))100%,calc(100% + var(--mod-tooltip-tip-antialiasing-inset,var(--spectrum-tooltip-tip-antialiasing-inset)))0);inset-inline:auto 100%}:host([placement*=left]) #tooltip #tip,.spectrum-Tooltip--left-bottom #tip,.spectrum-Tooltip--left-top #tip,.spectrum-Tooltip--start #tip,.spectrum-Tooltip--start-bottom #tip,.spectrum-Tooltip--start-top #tip{clip-path:polygon(calc(0% - var(--mod-tooltip-tip-antialiasing-inset,var(--spectrum-tooltip-tip-antialiasing-inset)))0,calc(0% - var(--mod-tooltip-tip-antialiasing-inset,var(--spectrum-tooltip-tip-antialiasing-inset)))100%,var(--mod-tooltip-tip-height-percentage,var(--spectrum-tooltip-tip-height-percentage))50%);inset-inline-start:100%}.spectrum-Tooltip--end-top #tip,.spectrum-Tooltip--left-top #tip,.spectrum-Tooltip--right-top #tip,.spectrum-Tooltip--start-top #tip{inset-block-start:var(--mod-tooltip-pointer-corner-spacing,var(--spectrum-tooltip-pointer-corner-spacing))}.spectrum-Tooltip--end-bottom #tip,.spectrum-Tooltip--left-bottom #tip,.spectrum-Tooltip--right-bottom #tip,.spectrum-Tooltip--start-bottom #tip{inset-block-end:var(--mod-tooltip-pointer-corner-spacing,var(--spectrum-tooltip-pointer-corner-spacing))}.spectrum-Tooltip--end #tip:dir(rtl),.spectrum-Tooltip--end-bottom #tip:dir(rtl),.spectrum-Tooltip--end-top #tip:dir(rtl),:host([placement*=left]) #tooltip #tip:dir(rtl),.spectrum-Tooltip--left-bottom #tip:dir(rtl),.spectrum-Tooltip--left-top #tip:dir(rtl),:host([dir=rtl]) .spectrum-Tooltip--end #tip,:host([dir=rtl]) .spectrum-Tooltip--end-bottom #tip,:host([dir=rtl]) .spectrum-Tooltip--end-top #tip,:host([dir=rtl][placement*=left]) #tooltip #tip,:host([dir=rtl]) .spectrum-Tooltip--left-bottom #tip,:host([dir=rtl]) .spectrum-Tooltip--left-top #tip{clip-path:polygon(calc(0% - var(--mod-tooltip-tip-antialiasing-inset,var(--spectrum-tooltip-tip-antialiasing-inset)))0,calc(0% - var(--mod-tooltip-tip-antialiasing-inset,var(--spectrum-tooltip-tip-antialiasing-inset)))100%,var(--mod-tooltip-tip-height-percentage,var(--spectrum-tooltip-tip-height-percentage))50%);left:100%;right:auto}:host([placement*=right]) #tooltip #tip:dir(rtl),.spectrum-Tooltip--right-bottom #tip:dir(rtl),.spectrum-Tooltip--right-top #tip:dir(rtl),.spectrum-Tooltip--start #tip:dir(rtl),.spectrum-Tooltip--start-bottom #tip:dir(rtl),.spectrum-Tooltip--start-top #tip:dir(rtl),:host([dir=rtl][placement*=right]) #tooltip #tip,:host([dir=rtl]) .spectrum-Tooltip--right-bottom #tip,:host([dir=rtl]) .spectrum-Tooltip--right-top #tip,:host([dir=rtl]) .spectrum-Tooltip--start #tip,:host([dir=rtl]) .spectrum-Tooltip--start-bottom #tip,:host([dir=rtl]) .spectrum-Tooltip--start-top #tip{clip-path:polygon(var(--mod-tooltip-tip-height-percentage,var(--spectrum-tooltip-tip-height-percentage))50%,calc(100% + var(--mod-tooltip-tip-antialiasing-inset,var(--spectrum-tooltip-tip-antialiasing-inset)))100%,calc(100% + var(--mod-tooltip-tip-antialiasing-inset,var(--spectrum-tooltip-tip-antialiasing-inset)))0);left:auto;right:100%}::slotted([slot=icon]){inline-size:var(--mod-tooltip-icon-width,var(--spectrum-tooltip-icon-width));block-size:var(--mod-tooltip-icon-height,var(--spectrum-tooltip-icon-height));flex-shrink:0;align-self:flex-start;margin-block-start:var(--mod-tooltip-icon-spacing-block-start,var(--spectrum-tooltip-icon-spacing-block-start));margin-inline-start:calc(var(--mod-tooltip-icon-spacing-inline-start,var(--spectrum-tooltip-icon-spacing-inline-start)) - var(--mod-tooltip-spacing-inline,var(--spectrum-tooltip-spacing-inline)));margin-inline-end:var(--mod-tooltip-icon-spacing-inline-end,var(--spectrum-tooltip-icon-spacing-inline-end))}#label{line-height:var(--mod-tooltip-line-height,var(--spectrum-tooltip-line-height));margin-block-start:var(--mod-tooltip-spacing-block-start,var(--spectrum-tooltip-spacing-block-start));margin-block-end:var(--mod-tooltip-spacing-block-end,var(--spectrum-tooltip-spacing-block-end))}#tooltip,:host([placement*=top]) #tooltip,.spectrum-Tooltip--top-end,.spectrum-Tooltip--top-left,.spectrum-Tooltip--top-right,.spectrum-Tooltip--top-start{margin-block-end:calc(var(--mod-tooltip-tip-block-size,var(--spectrum-tooltip-tip-block-size)) + var(--mod-tooltip-margin,var(--spectrum-tooltip-margin)))}:host([open]) .spectrum-Tooltip--top-end,:host([open]) .spectrum-Tooltip--top-left,:host([open]) .spectrum-Tooltip--top-right,:host([open]) .spectrum-Tooltip--top-start,:host([placement*=top][open]) #tooltip,:host([open]) #tooltip{transform:translateY(calc(var(--mod-tooltip-animation-distance,var(--spectrum-tooltip-animation-distance))*-1))}:host([placement*=bottom]) #tooltip,.spectrum-Tooltip--bottom-end,.spectrum-Tooltip--bottom-left,.spectrum-Tooltip--bottom-right,.spectrum-Tooltip--bottom-start{margin-block-start:calc(var(--mod-tooltip-tip-block-size,var(--spectrum-tooltip-tip-block-size)) + var(--mod-tooltip-margin,var(--spectrum-tooltip-margin)))}:host([open]) .spectrum-Tooltip--bottom-end,:host([open]) .spectrum-Tooltip--bottom-left,:host([open]) .spectrum-Tooltip--bottom-right,:host([open]) .spectrum-Tooltip--bottom-start,:host([placement*=bottom][open]) #tooltip{transform:translateY(var(--mod-tooltip-animation-distance,var(--spectrum-tooltip-animation-distance)))}:host([placement*=right]) #tooltip,.spectrum-Tooltip--right-bottom,.spectrum-Tooltip--right-top{margin-left:calc(var(--mod-tooltip-tip-block-size,var(--spectrum-tooltip-tip-block-size)) + var(--mod-tooltip-margin,var(--spectrum-tooltip-margin)))}:host([open]) .spectrum-Tooltip--right-bottom,:host([open]) .spectrum-Tooltip--right-top,:host([placement*=right][open]) #tooltip{transform:translateX(var(--mod-tooltip-animation-distance,var(--spectrum-tooltip-animation-distance)))}:host([placement*=left]) #tooltip,.spectrum-Tooltip--left-bottom,.spectrum-Tooltip--left-top{margin-right:calc(var(--mod-tooltip-tip-block-size,var(--spectrum-tooltip-tip-block-size)) + var(--mod-tooltip-margin,var(--spectrum-tooltip-margin)))}:host([open]) .spectrum-Tooltip--left-bottom,:host([open]) .spectrum-Tooltip--left-top,:host([placement*=left][open]) #tooltip{transform:translateX(calc(var(--mod-tooltip-animation-distance,var(--spectrum-tooltip-animation-distance))*-1))}.spectrum-Tooltip--start,.spectrum-Tooltip--start-bottom,.spectrum-Tooltip--start-top{margin-inline-end:calc(var(--mod-tooltip-tip-block-size,var(--spectrum-tooltip-tip-block-size)) + var(--mod-tooltip-margin,var(--spectrum-tooltip-margin)))}:host([open]) .spectrum-Tooltip--start-bottom,:host([open]) .spectrum-Tooltip--start-top,:host([open]) .spectrum-Tooltip--start{transform:translateX(calc(var(--mod-tooltip-animation-distance,var(--spectrum-tooltip-animation-distance))*-1))}:host([open]) .spectrum-Tooltip--start-bottom:dir(rtl),:host([open]) .spectrum-Tooltip--start-top:dir(rtl),:host([open]) .spectrum-Tooltip--start:dir(rtl),:host([dir=rtl][open]) .spectrum-Tooltip--start-bottom,:host([dir=rtl][open]) .spectrum-Tooltip--start-top,:host([dir=rtl][open]) .spectrum-Tooltip--start{transform:translateX(var(--mod-tooltip-animation-distance,var(--spectrum-tooltip-animation-distance)))}.spectrum-Tooltip--end,.spectrum-Tooltip--end-bottom,.spectrum-Tooltip--end-top{margin-inline-start:calc(var(--mod-tooltip-tip-block-size,var(--spectrum-tooltip-tip-block-size)) + var(--mod-tooltip-margin,var(--spectrum-tooltip-margin)))}:host([open]) .spectrum-Tooltip--end-bottom,:host([open]) .spectrum-Tooltip--end-top,:host([open]) .spectrum-Tooltip--end{transform:translateX(var(--mod-tooltip-animation-distance,var(--spectrum-tooltip-animation-distance)))}:host([open]) .spectrum-Tooltip--end-bottom:dir(rtl),:host([open]) .spectrum-Tooltip--end-top:dir(rtl),:host([open]) .spectrum-Tooltip--end:dir(rtl),:host([dir=rtl][open]) .spectrum-Tooltip--end-bottom,:host([dir=rtl][open]) .spectrum-Tooltip--end-top,:host([dir=rtl][open]) .spectrum-Tooltip--end{transform:translateX(calc(var(--mod-tooltip-animation-distance,var(--spectrum-tooltip-animation-distance))*-1))}#tooltip{--spectrum-tooltip-backgound-color-default-neutral:var(--system-spectrum-tooltip-backgound-color-default-neutral)}:host{white-space:initial;display:contents}#tooltip{inline-size:max-content}#tip{clip-path:polygon(0 -5%,50% 50%,100% -5%);width:var(--spectrum-tooltip-tip-inline-size)!important;height:var(--spectrum-tooltip-tip-inline-size)!important}#tip[style]{transform:none!important}:host(:not([placement*=top])) #tooltip{margin-bottom:0}:host([placement*=top]) #tooltip #tip{inset-block-start:100%}:host([placement*=bottom]) #tooltip #tip{clip-path:polygon(50% 50%,0 105%,100% 105%);inset-block-end:100%;top:auto}:host([placement*=left]) #tooltip #tip,:host([placement*=right]) #tooltip #tip{inset-block-start:50%;transform:translateY(-50%)}:host([placement*=right]) #tooltip #tip{clip-path:polygon(50% 50%,105% 100%,105% 0);inset-inline:calc(var(--mod-tooltip-tip-block-size,var(--spectrum-tooltip-tip-block-size))*-2)100%}:host([placement*=left]) #tooltip #tip{clip-path:polygon(-5% 0,-5% 100%,50% 50%);inset-inline-start:100%}sp-overlay:not(:defined){display:none}\n`;\nexport default styles;", "/*\nCopyright 2020 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\nimport { Tooltip } from './src/Tooltip.js';\nimport { defineElement } from '@spectrum-web-components/base/src/define-element.js';\n\ndefineElement('sp-tooltip', Tooltip);\n\ndeclare global {\n    interface HTMLElementTagNameMap {\n        'sp-tooltip': Tooltip;\n    }\n}\n"],
  "mappings": "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",
  "names": ["html", "SpectrumElement", "property", "query", "ifDefined", "css", "styles", "focusableSelector", "DependencyManagerController", "TooltipOpenable", "event", "name", "_oldValue", "newValue", "open", "tooltip", "placement", "SpectrumElement", "tooltipStyles", "variant", "_a", "start", "root", "triggerElement", "html", "ifDefined", "overlayElement", "__decorateClass", "property", "query", "defineElement", "Tooltip"]
}
