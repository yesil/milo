{
  "version": 3,
  "sources": ["../node_modules/focus-visible/dist/focus-visible.js", "../node_modules/@spectrum-web-components/shared/src/focusable-selectors.ts", "../node_modules/@spectrum-web-components/shared/src/first-focusable-in.ts", "../node_modules/@spectrum-web-components/shared/src/focus-visible.ts", "../node_modules/@spectrum-web-components/shared/src/focusable.ts", "../node_modules/@spectrum-web-components/shared/src/get-active-element.ts", "../node_modules/@spectrum-web-components/shared/src/like-anchor.ts", "../node_modules/@lit-labs/observers/src/mutation-controller.ts", "../node_modules/@spectrum-web-components/shared/src/observe-slot-presence.ts", "../node_modules/@spectrum-web-components/shared/src/observe-slot-text.ts", "../node_modules/@spectrum-web-components/shared/src/platform.ts", "../node_modules/@spectrum-web-components/shared/src/reparent-children.ts", "../node_modules/@spectrum-web-components/shared/src/get-label-from-slot.ts", "../node_modules/@spectrum-web-components/shared/src/random-id.ts"],
  "sourcesContent": ["(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (factory());\n}(this, (function () { 'use strict';\n\n  /**\n   * Applies the :focus-visible polyfill at the given scope.\n   * A scope in this case is either the top-level Document or a Shadow Root.\n   *\n   * @param {(Document|ShadowRoot)} scope\n   * @see https://github.com/WICG/focus-visible\n   */\n  function applyFocusVisiblePolyfill(scope) {\n    var hadKeyboardEvent = true;\n    var hadFocusVisibleRecently = false;\n    var hadFocusVisibleRecentlyTimeout = null;\n\n    var inputTypesAllowlist = {\n      text: true,\n      search: true,\n      url: true,\n      tel: true,\n      email: true,\n      password: true,\n      number: true,\n      date: true,\n      month: true,\n      week: true,\n      time: true,\n      datetime: true,\n      'datetime-local': true\n    };\n\n    /**\n     * Helper function for legacy browsers and iframes which sometimes focus\n     * elements like document, body, and non-interactive SVG.\n     * @param {Element} el\n     */\n    function isValidFocusTarget(el) {\n      if (\n        el &&\n        el !== document &&\n        el.nodeName !== 'HTML' &&\n        el.nodeName !== 'BODY' &&\n        'classList' in el &&\n        'contains' in el.classList\n      ) {\n        return true;\n      }\n      return false;\n    }\n\n    /**\n     * Computes whether the given element should automatically trigger the\n     * `focus-visible` class being added, i.e. whether it should always match\n     * `:focus-visible` when focused.\n     * @param {Element} el\n     * @return {boolean}\n     */\n    function focusTriggersKeyboardModality(el) {\n      var type = el.type;\n      var tagName = el.tagName;\n\n      if (tagName === 'INPUT' && inputTypesAllowlist[type] && !el.readOnly) {\n        return true;\n      }\n\n      if (tagName === 'TEXTAREA' && !el.readOnly) {\n        return true;\n      }\n\n      if (el.isContentEditable) {\n        return true;\n      }\n\n      return false;\n    }\n\n    /**\n     * Add the `focus-visible` class to the given element if it was not added by\n     * the author.\n     * @param {Element} el\n     */\n    function addFocusVisibleClass(el) {\n      if (el.classList.contains('focus-visible')) {\n        return;\n      }\n      el.classList.add('focus-visible');\n      el.setAttribute('data-focus-visible-added', '');\n    }\n\n    /**\n     * Remove the `focus-visible` class from the given element if it was not\n     * originally added by the author.\n     * @param {Element} el\n     */\n    function removeFocusVisibleClass(el) {\n      if (!el.hasAttribute('data-focus-visible-added')) {\n        return;\n      }\n      el.classList.remove('focus-visible');\n      el.removeAttribute('data-focus-visible-added');\n    }\n\n    /**\n     * If the most recent user interaction was via the keyboard;\n     * and the key press did not include a meta, alt/option, or control key;\n     * then the modality is keyboard. Otherwise, the modality is not keyboard.\n     * Apply `focus-visible` to any current active element and keep track\n     * of our keyboard modality state with `hadKeyboardEvent`.\n     * @param {KeyboardEvent} e\n     */\n    function onKeyDown(e) {\n      if (e.metaKey || e.altKey || e.ctrlKey) {\n        return;\n      }\n\n      if (isValidFocusTarget(scope.activeElement)) {\n        addFocusVisibleClass(scope.activeElement);\n      }\n\n      hadKeyboardEvent = true;\n    }\n\n    /**\n     * If at any point a user clicks with a pointing device, ensure that we change\n     * the modality away from keyboard.\n     * This avoids the situation where a user presses a key on an already focused\n     * element, and then clicks on a different element, focusing it with a\n     * pointing device, while we still think we're in keyboard modality.\n     * @param {Event} e\n     */\n    function onPointerDown(e) {\n      hadKeyboardEvent = false;\n    }\n\n    /**\n     * On `focus`, add the `focus-visible` class to the target if:\n     * - the target received focus as a result of keyboard navigation, or\n     * - the event target is an element that will likely require interaction\n     *   via the keyboard (e.g. a text box)\n     * @param {Event} e\n     */\n    function onFocus(e) {\n      // Prevent IE from focusing the document or HTML element.\n      if (!isValidFocusTarget(e.target)) {\n        return;\n      }\n\n      if (hadKeyboardEvent || focusTriggersKeyboardModality(e.target)) {\n        addFocusVisibleClass(e.target);\n      }\n    }\n\n    /**\n     * On `blur`, remove the `focus-visible` class from the target.\n     * @param {Event} e\n     */\n    function onBlur(e) {\n      if (!isValidFocusTarget(e.target)) {\n        return;\n      }\n\n      if (\n        e.target.classList.contains('focus-visible') ||\n        e.target.hasAttribute('data-focus-visible-added')\n      ) {\n        // To detect a tab/window switch, we look for a blur event followed\n        // rapidly by a visibility change.\n        // If we don't see a visibility change within 100ms, it's probably a\n        // regular focus change.\n        hadFocusVisibleRecently = true;\n        window.clearTimeout(hadFocusVisibleRecentlyTimeout);\n        hadFocusVisibleRecentlyTimeout = window.setTimeout(function() {\n          hadFocusVisibleRecently = false;\n        }, 100);\n        removeFocusVisibleClass(e.target);\n      }\n    }\n\n    /**\n     * If the user changes tabs, keep track of whether or not the previously\n     * focused element had .focus-visible.\n     * @param {Event} e\n     */\n    function onVisibilityChange(e) {\n      if (document.visibilityState === 'hidden') {\n        // If the tab becomes active again, the browser will handle calling focus\n        // on the element (Safari actually calls it twice).\n        // If this tab change caused a blur on an element with focus-visible,\n        // re-apply the class when the user switches back to the tab.\n        if (hadFocusVisibleRecently) {\n          hadKeyboardEvent = true;\n        }\n        addInitialPointerMoveListeners();\n      }\n    }\n\n    /**\n     * Add a group of listeners to detect usage of any pointing devices.\n     * These listeners will be added when the polyfill first loads, and anytime\n     * the window is blurred, so that they are active when the window regains\n     * focus.\n     */\n    function addInitialPointerMoveListeners() {\n      document.addEventListener('mousemove', onInitialPointerMove);\n      document.addEventListener('mousedown', onInitialPointerMove);\n      document.addEventListener('mouseup', onInitialPointerMove);\n      document.addEventListener('pointermove', onInitialPointerMove);\n      document.addEventListener('pointerdown', onInitialPointerMove);\n      document.addEventListener('pointerup', onInitialPointerMove);\n      document.addEventListener('touchmove', onInitialPointerMove);\n      document.addEventListener('touchstart', onInitialPointerMove);\n      document.addEventListener('touchend', onInitialPointerMove);\n    }\n\n    function removeInitialPointerMoveListeners() {\n      document.removeEventListener('mousemove', onInitialPointerMove);\n      document.removeEventListener('mousedown', onInitialPointerMove);\n      document.removeEventListener('mouseup', onInitialPointerMove);\n      document.removeEventListener('pointermove', onInitialPointerMove);\n      document.removeEventListener('pointerdown', onInitialPointerMove);\n      document.removeEventListener('pointerup', onInitialPointerMove);\n      document.removeEventListener('touchmove', onInitialPointerMove);\n      document.removeEventListener('touchstart', onInitialPointerMove);\n      document.removeEventListener('touchend', onInitialPointerMove);\n    }\n\n    /**\n     * When the polfyill first loads, assume the user is in keyboard modality.\n     * If any event is received from a pointing device (e.g. mouse, pointer,\n     * touch), turn off keyboard modality.\n     * This accounts for situations where focus enters the page from the URL bar.\n     * @param {Event} e\n     */\n    function onInitialPointerMove(e) {\n      // Work around a Safari quirk that fires a mousemove on <html> whenever the\n      // window blurs, even if you're tabbing out of the page. \u00AF\\_(\u30C4)_/\u00AF\n      if (e.target.nodeName && e.target.nodeName.toLowerCase() === 'html') {\n        return;\n      }\n\n      hadKeyboardEvent = false;\n      removeInitialPointerMoveListeners();\n    }\n\n    // For some kinds of state, we are interested in changes at the global scope\n    // only. For example, global pointer input, global key presses and global\n    // visibility change should affect the state at every scope:\n    document.addEventListener('keydown', onKeyDown, true);\n    document.addEventListener('mousedown', onPointerDown, true);\n    document.addEventListener('pointerdown', onPointerDown, true);\n    document.addEventListener('touchstart', onPointerDown, true);\n    document.addEventListener('visibilitychange', onVisibilityChange, true);\n\n    addInitialPointerMoveListeners();\n\n    // For focus and blur, we specifically care about state changes in the local\n    // scope. This is because focus / blur events that originate from within a\n    // shadow root are not re-dispatched from the host element if it was already\n    // the active element in its own scope:\n    scope.addEventListener('focus', onFocus, true);\n    scope.addEventListener('blur', onBlur, true);\n\n    // We detect that a node is a ShadowRoot by ensuring that it is a\n    // DocumentFragment and also has a host property. This check covers native\n    // implementation and polyfill implementation transparently. If we only cared\n    // about the native implementation, we could just check if the scope was\n    // an instance of a ShadowRoot.\n    if (scope.nodeType === Node.DOCUMENT_FRAGMENT_NODE && scope.host) {\n      // Since a ShadowRoot is a special kind of DocumentFragment, it does not\n      // have a root element to add a class to. So, we add this attribute to the\n      // host element instead:\n      scope.host.setAttribute('data-js-focus-visible', '');\n    } else if (scope.nodeType === Node.DOCUMENT_NODE) {\n      document.documentElement.classList.add('js-focus-visible');\n      document.documentElement.setAttribute('data-js-focus-visible', '');\n    }\n  }\n\n  // It is important to wrap all references to global window and document in\n  // these checks to support server-side rendering use cases\n  // @see https://github.com/WICG/focus-visible/issues/199\n  if (typeof window !== 'undefined' && typeof document !== 'undefined') {\n    // Make the polyfill helper globally available. This can be used as a signal\n    // to interested libraries that wish to coordinate with the polyfill for e.g.,\n    // applying the polyfill to a shadow root:\n    window.applyFocusVisiblePolyfill = applyFocusVisiblePolyfill;\n\n    // Notify interested libraries of the polyfill's presence, in case the\n    // polyfill was loaded lazily:\n    var event;\n\n    try {\n      event = new CustomEvent('focus-visible-polyfill-ready');\n    } catch (error) {\n      // IE11 does not support using CustomEvent as a constructor directly:\n      event = document.createEvent('CustomEvent');\n      event.initCustomEvent('focus-visible-polyfill-ready', false, false, {});\n    }\n\n    window.dispatchEvent(event);\n  }\n\n  if (typeof document !== 'undefined') {\n    // Apply the polyfill to the global document, so that no JavaScript\n    // coordination is required to use the polyfill in the top-level document:\n    applyFocusVisiblePolyfill(document);\n  }\n\n})));\n", "/*\nCopyright 2023 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\n\nconst focusables = [\n    'button',\n    '[focusable]',\n    '[href]',\n    'input',\n    'label',\n    'select',\n    'textarea',\n    '[tabindex]',\n];\n\nconst userFocuable = ':not([tabindex=\"-1\"])';\n\nexport const userFocusableSelector =\n    focusables.join(`${userFocuable}, `) + userFocuable;\n\nexport const focusableSelector = focusables.join(', ');\n", "/*\nCopyright 2020 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\n\nimport type { SpectrumElement } from '@spectrum-web-components/base';\nimport { userFocusableSelector } from './focusable-selectors.js';\n\nexport const firstFocusableIn = (\n    root: HTMLElement | ShadowRoot\n): SpectrumElement | null => {\n    const firstFocusable = root.querySelector(\n        userFocusableSelector\n    ) as SpectrumElement;\n    return firstFocusable;\n};\n\nexport const firstFocusableSlottedIn = (\n    root: HTMLSlotElement\n): SpectrumElement | null => {\n    const firstFocusable = root\n        .assignedElements()\n        .find((element) =>\n            element.matches(userFocusableSelector)\n        ) as SpectrumElement;\n    return firstFocusable;\n};\n", "/*\nCopyright 2020 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\n\ndeclare global {\n    interface Window {\n        applyFocusVisiblePolyfill?: (scope: Document | ShadowRoot) => void;\n    }\n}\n\ntype Constructor<T = Record<string, unknown>> = {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    new (...args: any[]): T;\n    prototype: T;\n};\n\ninterface OptionalLifecycleCallbacks {\n    connectedCallback?(): void;\n    disconnectedCallback?(): void;\n    manageAutoFocus?(): void;\n}\n\ntype MixableBaseClass = HTMLElement & OptionalLifecycleCallbacks;\n\ntype EndPolyfillCoordinationCallback = () => void;\n\nlet hasFocusVisible = true;\n\ntry {\n    document.body.querySelector(':focus-visible');\n} catch (error) {\n    hasFocusVisible = false;\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    import('focus-visible');\n}\n\n/**\n * This mixin function is designed to be applied to a class that inherits\n * from HTMLElement. It makes it easy for a custom element to coordinate with\n * the :focus-visible polyfill.\n *\n * NOTE(cdata): The code here was adapted from an example proposed with the\n * introduction of ShadowDOM support in the :focus-visible polyfill.\n *\n * @see https://github.com/WICG/focus-visible/pull/196\n * @param {Function} SuperClass The base class implementation to decorate with\n * implementation that coordinates with the :focus-visible polyfill\n */\nexport const FocusVisiblePolyfillMixin = <\n    T extends Constructor<MixableBaseClass>\n>(\n    SuperClass: T\n): T => {\n    const coordinateWithPolyfill = (\n        instance: MixableBaseClass\n    ): EndPolyfillCoordinationCallback => {\n        // If there is no shadow root, there is no need to coordinate with\n        // the polyfill. If we already coordinated with the polyfill, we can\n        // skip subsequent invokcations:\n        if (\n            instance.shadowRoot == null ||\n            instance.hasAttribute('data-js-focus-visible')\n        ) {\n            // eslint-disable-next-line @typescript-eslint/no-empty-function\n            return () => {};\n        }\n\n        // The polyfill might already be loaded. If so, we can apply it to\n        // the shadow root immediately:\n        if (self.applyFocusVisiblePolyfill) {\n            self.applyFocusVisiblePolyfill(instance.shadowRoot);\n\n            if (instance.manageAutoFocus) {\n                instance.manageAutoFocus();\n            }\n        } else {\n            const coordinationHandler = (): void => {\n                if (self.applyFocusVisiblePolyfill && instance.shadowRoot) {\n                    self.applyFocusVisiblePolyfill(instance.shadowRoot);\n                }\n\n                if (instance.manageAutoFocus) {\n                    instance.manageAutoFocus();\n                }\n            };\n            // Otherwise, wait for the polyfill to be loaded lazily. It might\n            // never be loaded, but if it is then we can apply it to the\n            // shadow root at the appropriate time by waiting for the ready\n            // event:\n            self.addEventListener(\n                'focus-visible-polyfill-ready',\n                coordinationHandler,\n                { once: true }\n            );\n\n            return () => {\n                self.removeEventListener(\n                    'focus-visible-polyfill-ready',\n                    coordinationHandler\n                );\n            };\n        }\n\n        // eslint-disable-next-line @typescript-eslint/no-empty-function\n        return () => {};\n    };\n\n    const $endPolyfillCoordination = Symbol('endPolyfillCoordination');\n\n    // IE11 doesn't natively support custom elements or JavaScript class\n    // syntax The mixin implementation assumes that the user will take the\n    // appropriate steps to support both:\n    class FocusVisibleCoordinator extends SuperClass {\n        private [$endPolyfillCoordination]: EndPolyfillCoordinationCallback | null =\n            null;\n\n        // Attempt to coordinate with the polyfill when connected to the\n        // document:\n        override connectedCallback(): void {\n            super.connectedCallback && super.connectedCallback();\n            if (!hasFocusVisible) {\n                requestAnimationFrame(() => {\n                    if (this[$endPolyfillCoordination] == null) {\n                        this[$endPolyfillCoordination] =\n                            coordinateWithPolyfill(this);\n                    }\n                });\n            }\n        }\n\n        override disconnectedCallback(): void {\n            super.disconnectedCallback && super.disconnectedCallback();\n            // It's important to remove the polyfill event listener when we\n            // disconnect, otherwise we will leak the whole element via window:\n            if (!hasFocusVisible) {\n                requestAnimationFrame(() => {\n                    if (this[$endPolyfillCoordination] != null) {\n                        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                        this[$endPolyfillCoordination]!();\n                        this[$endPolyfillCoordination] = null;\n                    }\n                });\n            }\n        }\n    }\n\n    return FocusVisibleCoordinator;\n};\n", "/*\nCopyright 2020 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\nimport { PropertyValues, SpectrumElement } from '@spectrum-web-components/base';\nimport { property } from '@spectrum-web-components/base/src/decorators.js';\n\nimport { FocusVisiblePolyfillMixin } from './focus-visible.js';\n\ntype DisableableElement = HTMLElement & { disabled?: boolean };\n\nfunction nextFrame(): Promise<void> {\n    return new Promise((res) => requestAnimationFrame(() => res()));\n}\n\n/**\n * Focusable base class handles tabindex setting into shadowed elements automatically.\n *\n * This implementation is based heavily on the aybolit delegate-focus-mixin at\n * https://github.com/web-padawan/aybolit/blob/master/packages/core/src/mixins/delegate-focus-mixin.js\n */\nexport class Focusable extends FocusVisiblePolyfillMixin(SpectrumElement) {\n    /**\n     * Disable this control. It will not receive focus or events\n     */\n    @property({ type: Boolean, reflect: true })\n    public disabled = false;\n\n    /**\n     * When this control is rendered, focus it automatically\n     * @private\n     */\n    @property({ type: Boolean })\n    public override autofocus = false;\n\n    /**\n     * The tab index to apply to this control. See general documentation about\n     * the tabindex HTML property\n     *\n     * @private\n     */\n    @property({ type: Number })\n    public override get tabIndex(): number {\n        if (this.focusElement === this) {\n            const tabindex = this.hasAttribute('tabindex')\n                ? Number(this.getAttribute('tabindex'))\n                : NaN;\n            return !isNaN(tabindex) ? tabindex : -1;\n        }\n        const tabIndexAttribute = parseFloat(\n            this.hasAttribute('tabindex')\n                ? (this.getAttribute('tabindex') as string) || '0'\n                : '0'\n        );\n        // When `disabled` tabindex is -1.\n        // When host tabindex -1, use that as the cache.\n        if (this.disabled || tabIndexAttribute < 0) {\n            return -1;\n        }\n        // When `focusElement` isn't available yet,\n        // use host tabindex as the cache.\n        if (!this.focusElement) {\n            return tabIndexAttribute;\n        }\n        // All other times, use the tabindex of `focusElement`\n        // as the cache for this value.\n        // return this.focusElement.tabIndex;\n        return this._tabIndex;\n    }\n    public override set tabIndex(tabIndex: number) {\n        // Flipping `manipulatingTabindex` to true before a change\n        // allows for that change NOT to effect the cached value of tabindex\n        if (this.manipulatingTabindex) {\n            this.manipulatingTabindex = false;\n            return;\n        }\n\n        if (this.focusElement === this) {\n            if (this.disabled) {\n                this._tabIndex = tabIndex;\n            } else if (tabIndex !== this._tabIndex) {\n                this._tabIndex = tabIndex;\n                const tabindex = '' + tabIndex;\n                this.manipulatingTabindex = true;\n                this.setAttribute('tabindex', tabindex);\n            }\n            return;\n        }\n\n        if (tabIndex === -1) {\n            this.addEventListener(\n                'pointerdown',\n                this.onPointerdownManagementOfTabIndex\n            );\n        } else {\n            // All code paths are about to address the host tabindex without side effect.\n            this.manipulatingTabindex = true;\n            this.removeEventListener(\n                'pointerdown',\n                this.onPointerdownManagementOfTabIndex\n            );\n        }\n\n        if (tabIndex === -1 || this.disabled) {\n            this.manipulatingTabindex = true;\n            this.setAttribute('tabindex', '-1');\n            this.removeAttribute('focusable');\n\n            if (this.selfManageFocusElement) {\n                return;\n            }\n\n            if (tabIndex !== -1) {\n                this._tabIndex = tabIndex;\n                this.manageFocusElementTabindex(tabIndex);\n            } else {\n                this.focusElement?.removeAttribute('tabindex');\n            }\n            return;\n        }\n\n        this.setAttribute('focusable', '');\n        if (this.hasAttribute('tabindex')) {\n            this.removeAttribute('tabindex');\n        } else {\n            // You can't remove an attribute that isn't there,\n            // manually end the `manipulatingTabindex` guard.\n            this.manipulatingTabindex = false;\n        }\n\n        this._tabIndex = tabIndex;\n        this.manageFocusElementTabindex(tabIndex);\n    }\n    private _tabIndex = 0;\n\n    private onPointerdownManagementOfTabIndex(): void {\n        if (this.tabIndex === -1) {\n            setTimeout(() => {\n                // Ensure this happens _after_ WebKit attempts to focus the :host.\n                this.tabIndex = 0;\n                this.focus({ preventScroll: true });\n                this.tabIndex = -1;\n            });\n        }\n    }\n\n    private async manageFocusElementTabindex(tabIndex: number): Promise<void> {\n        if (!this.focusElement) {\n            // allow setting these values to be async when needed.\n            await this.updateComplete;\n        }\n        if (tabIndex === null) {\n            this.focusElement.removeAttribute('tabindex');\n        } else {\n            if (this.focusElement !== this) {\n                this.focusElement.tabIndex = tabIndex;\n            }\n        }\n    }\n\n    private manipulatingTabindex = false;\n\n    /**\n     * @private\n     */\n    public get focusElement(): DisableableElement {\n        throw new Error('Must implement focusElement getter!');\n    }\n\n    /**\n     * @public\n     * @returns {boolean} whether the component should manage its focusElement tab-index or not\n     * Needed for action-menu to be supported in action-group in an accessible way\n     */\n    public get selfManageFocusElement(): boolean {\n        return false;\n    }\n\n    public override focus(options?: FocusOptions): void {\n        if (this.disabled || !this.focusElement) {\n            return;\n        }\n\n        if (this.focusElement !== this) {\n            this.focusElement.focus(options);\n        } else {\n            HTMLElement.prototype.focus.apply(this, [options]);\n        }\n    }\n\n    public override blur(): void {\n        const focusElement = this.focusElement || this;\n        if (focusElement !== this) {\n            focusElement.blur();\n        } else {\n            HTMLElement.prototype.blur.apply(this);\n        }\n    }\n\n    public override click(): void {\n        if (this.disabled) {\n            return;\n        }\n\n        const focusElement = this.focusElement || this;\n        if (focusElement !== this) {\n            focusElement.click();\n        } else {\n            HTMLElement.prototype.click.apply(this);\n        }\n    }\n\n    protected manageAutoFocus(): void {\n        if (this.autofocus) {\n            /**\n             * Trick :focus-visible polyfill into thinking keyboard based focus\n             *\n             * @private\n             **/\n            this.dispatchEvent(\n                new KeyboardEvent('keydown', {\n                    code: 'Tab',\n                })\n            );\n            this.focusElement.focus();\n        }\n    }\n\n    protected override firstUpdated(changes: PropertyValues): void {\n        super.firstUpdated(changes);\n        if (\n            !this.hasAttribute('tabindex') ||\n            this.getAttribute('tabindex') !== '-1'\n        ) {\n            this.setAttribute('focusable', '');\n        }\n    }\n\n    protected override update(changedProperties: PropertyValues): void {\n        if (changedProperties.has('disabled')) {\n            this.handleDisabledChanged(\n                this.disabled,\n                changedProperties.get('disabled') as boolean\n            );\n        }\n\n        super.update(changedProperties);\n    }\n\n    protected override updated(changedProperties: PropertyValues): void {\n        super.updated(changedProperties);\n\n        if (changedProperties.has('disabled') && this.disabled) {\n            this.blur();\n        }\n    }\n\n    private async handleDisabledChanged(\n        disabled: boolean,\n        oldDisabled: boolean\n    ): Promise<void> {\n        const canSetDisabled = (): boolean =>\n            this.focusElement !== this &&\n            typeof this.focusElement.disabled !== 'undefined';\n        if (disabled) {\n            this.manipulatingTabindex = true;\n            this.setAttribute('tabindex', '-1');\n            await this.updateComplete;\n            if (canSetDisabled()) {\n                this.focusElement.disabled = true;\n            } else {\n                this.setAttribute('aria-disabled', 'true');\n            }\n        } else if (oldDisabled) {\n            this.manipulatingTabindex = true;\n            if (this.focusElement === this) {\n                this.setAttribute('tabindex', '' + this._tabIndex);\n            } else {\n                this.removeAttribute('tabindex');\n            }\n            await this.updateComplete;\n            if (canSetDisabled()) {\n                this.focusElement.disabled = false;\n            } else {\n                this.removeAttribute('aria-disabled');\n            }\n        }\n    }\n\n    protected override async getUpdateComplete(): Promise<boolean> {\n        const complete = (await super.getUpdateComplete()) as boolean;\n        await this.autofocusReady;\n        return complete;\n    }\n\n    private autofocusReady = Promise.resolve();\n\n    public override connectedCallback(): void {\n        super.connectedCallback();\n        if (this.autofocus) {\n            this.autofocusReady = new Promise(async (res) => {\n                // If at connect time the [autofocus] content is placed within\n                // content that needs to be \"hidden\" by default, it would need to wait\n                // two rAFs for animations to be triggered on that content in\n                // order for the [autofocus] to become \"visisble\" and have its\n                // focus() capabilities enabled.\n                //\n                // Await this with `getUpdateComplete` so that the element cannot\n                // become \"ready\" until `manageFocus` has occured.\n                await nextFrame();\n                await nextFrame();\n                res();\n            });\n            this.updateComplete.then(() => {\n                this.manageAutoFocus();\n            });\n        }\n    }\n}\n", "/*\nCopyright 2020 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\n\n/* c8 ignore next 3 */\nexport const getActiveElement = (el: Node): Element | null => {\n    return (el.getRootNode() as Document).activeElement;\n};\n", "/*\nCopyright 2020 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\nimport {\n    html,\n    ReactiveElement,\n    TemplateResult,\n} from '@spectrum-web-components/base';\nimport { property } from '@spectrum-web-components/base/src/decorators.js';\nimport { ifDefined } from '@spectrum-web-components/base/src/directives.js';\n\ntype Constructor<T = Record<string, unknown>> = {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    new (...args: any[]): T;\n    prototype: T;\n};\n\ntype RenderAnchorOptions = {\n    id: string;\n    className?: string;\n    ariaHidden?: boolean;\n    anchorContent?: TemplateResult | TemplateResult[];\n    labelledby?: string;\n    tabindex?: -1 | 0;\n};\n\nexport interface LikeAnchorInterface {\n    download?: string;\n    label?: string;\n    href?: string;\n    rel?: string;\n    target?: '_blank' | '_parent' | '_self' | '_top';\n    renderAnchor(options: RenderAnchorOptions): TemplateResult;\n}\n\nexport function LikeAnchor<T extends Constructor<ReactiveElement>>(\n    constructor: T\n): T & Constructor<LikeAnchorInterface> {\n    class LikeAnchorElement extends constructor {\n        /**\n         * Causes the browser to treat the linked URL as a download.\n         */\n        @property()\n        public download?: string;\n\n        /**\n         * An accessible label that describes the component.\n         * It will be applied to aria-label, but not visually rendered.\n         */\n        @property()\n        public label?: string;\n\n        /**\n         * The URL that the hyperlink points to.\n         */\n        @property()\n        public href?: string;\n\n        /**\n         * Where to display the linked URL, as the name for a browsing context (a tab, window, or &lt;iframe&gt;).\n         */\n        @property()\n        public target?: '_blank' | '_parent' | '_self' | '_top';\n\n        /**\n         * How much of the referrer to send when following the link.\n         */\n        @property()\n        public referrerpolicy?:\n            | 'no-referrer'\n            | 'no-referrer-when-downgrade'\n            | 'origin'\n            | 'origin-when-cross-origin'\n            | 'same-origin'\n            | 'strict-origin'\n            | 'strict-origin-when-cross-origin'\n            | 'unsafe-url';\n\n        /**\n         * The relationship of the linked URL as space-separated link types.\n         */\n        @property()\n        public rel?: string;\n\n        public renderAnchor({\n            id,\n            className,\n            ariaHidden,\n            labelledby,\n            tabindex,\n            // prettier-ignore\n            anchorContent = html`<slot></slot>`,\n        }: RenderAnchorOptions): TemplateResult {\n            // prettier-ignore\n            return html\n                `<a\n                    id=${id}\n                    class=${ifDefined(className)}\n                    href=${ifDefined(this.href)}\n                    download=${ifDefined(this.download)}\n                    target=${ifDefined(this.target)}\n                    aria-label=${ifDefined(this.label)}\n                    aria-labelledby=${ifDefined(labelledby)}\n                    aria-hidden=${ifDefined(ariaHidden ? 'true' : undefined)}\n                    tabindex=${ifDefined(tabindex)}\n                    referrerpolicy=${ifDefined(this.referrerpolicy)}\n                    rel=${ifDefined(this.rel)}\n                >${anchorContent}</a>`;\n        }\n    }\n    return LikeAnchorElement;\n}\n", "/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\nimport {\n  ReactiveController,\n  ReactiveControllerHost,\n} from '@lit/reactive-element/reactive-controller.js';\n\n/**\n * The callback function for a MutationController.\n */\nexport type MutationValueCallback<T = unknown> = (\n  ...args: Parameters<MutationCallback>\n) => T;\n\n/**\n * The config options for a MutationController.\n */\nexport interface MutationControllerConfig<T = unknown> {\n  /**\n   * Configuration object for the MutationObserver.\n   */\n  config: MutationObserverInit;\n  /**\n   * The element to observe. In addition to configuring the target here,\n   * the `observe` method can be called to observe additional targets. When not\n   * specified, the target defaults to the `host`. If set to `null`, no target\n   * is automatically observed. Only the configured target will be re-observed\n   * if the host connects again after unobserving via disconnection.\n   */\n  target?: Element | null;\n  /**\n   * The callback used to process detected changes into a value stored\n   * in the controller's `value` property.\n   */\n  callback?: MutationValueCallback<T>;\n  /**\n   * By default the `callback` is called without changes when a target is\n   * observed. This is done to help manage initial state, but this\n   * setup step can be skipped by setting this to true.\n   */\n  skipInitial?: boolean;\n}\n\n/**\n * MutationController is a ReactiveController that integrates a MutationObserver\n * with a ReactiveControllerHost's reactive update lifecycle. This is typically\n * a ReactiveElement or LitElement. MutationObservers can be used to detect\n * arbitrary changes to DOM, including nodes being added and remove and\n * attributes changing.\n *\n * The controller can specify a `target` element to observe and the\n * configuration options to pass to the MutationObserver. The `observe`\n * method can be called to observe additional elements.\n *\n * When a change is detected, the controller's given `callback` function is\n * used to process the result into a value which is stored on the controller.\n * The controller's `value` is usable during the host's update cycle.\n */\nexport class MutationController<T = unknown> implements ReactiveController {\n  private _host: ReactiveControllerHost;\n  private _targets = new Set<Element>();\n  private _config: MutationObserverInit;\n  private _observer!: MutationObserver;\n  private _skipInitial = false;\n  /**\n   * Flag used to help manage calling the `callback` when observe is called\n   * in addition to when a mutation occurs. This is done to help setup initial\n   * state and is performed async by requesting a host update and calling\n   * `handleChanges` once by checking and then resetting this flag.\n   */\n  private _unobservedUpdate = false;\n  /**\n   * The result of processing the observer's changes via the `callback`\n   * function.\n   */\n  value?: T;\n  /**\n   * Function that returns a value processed from the observer's changes.\n   * The result is stored in the `value` property.\n   */\n  callback?: MutationValueCallback<T>;\n  constructor(\n    host: ReactiveControllerHost & Element,\n    {target, config, callback, skipInitial}: MutationControllerConfig<T>\n  ) {\n    this._host = host;\n    // Target defaults to `host` unless explicitly `null`.\n    if (target !== null) {\n      this._targets.add(target ?? host);\n    }\n    this._config = config;\n    this._skipInitial = skipInitial ?? this._skipInitial;\n    this.callback = callback;\n    // Check browser support.\n    if (!window.MutationObserver) {\n      console.warn(\n        `MutationController error: browser does not support MutationObserver.`\n      );\n      return;\n    }\n    this._observer = new MutationObserver((records: MutationRecord[]) => {\n      this.handleChanges(records);\n      this._host.requestUpdate();\n    });\n    host.addController(this);\n  }\n\n  /**\n   * Process the observer's changes with the controller's `callback`\n   * function to produce a result stored in the `value` property.\n   */\n  protected handleChanges(records: MutationRecord[]) {\n    this.value = this.callback?.(records, this._observer);\n  }\n\n  hostConnected() {\n    for (const target of this._targets) {\n      this.observe(target);\n    }\n  }\n\n  hostDisconnected() {\n    this.disconnect();\n  }\n\n  async hostUpdated() {\n    // Eagerly deliver any changes that happened during update.\n    // And handle initial state as a set of 0 changes. This helps setup initial\n    // state and promotes UI = f(state) since ideally the callback does not\n    // rely on changes.\n    const pendingRecords = this._observer.takeRecords();\n    if (\n      pendingRecords.length ||\n      (!this._skipInitial && this._unobservedUpdate)\n    ) {\n      this.handleChanges(pendingRecords);\n    }\n    this._unobservedUpdate = false;\n  }\n\n  /**\n   * Observe the target element. The controller's `target` is automatically\n   * observed when the host connects.\n   * @param target Element to observe\n   */\n  observe(target: Element) {\n    this._targets.add(target);\n    this._observer.observe(target, this._config);\n    this._unobservedUpdate = true;\n    this._host.requestUpdate();\n  }\n\n  /**\n   * Disconnects the observer. This is done automatically when the host\n   * disconnects.\n   */\n  protected disconnect() {\n    this._observer.disconnect();\n  }\n}\n", "/*\nCopyright 2020 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\nimport { ReactiveElement } from '@spectrum-web-components/base';\nimport { MutationController } from '@lit-labs/observers/mutation-controller.js';\n\nconst slotContentIsPresent = Symbol('slotContentIsPresent');\n\ntype Constructor<T = Record<string, unknown>> = {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    new (...args: any[]): T;\n    prototype: T;\n};\n\nexport interface SlotPresenceObservingInterface {\n    slotContentIsPresent: boolean;\n    getSlotContentPresence(selector: string): boolean;\n    managePresenceObservedSlot(): void;\n}\n\nexport function ObserveSlotPresence<T extends Constructor<ReactiveElement>>(\n    constructor: T,\n    lightDomSelector: string | string[]\n): T & Constructor<SlotPresenceObservingInterface> {\n    const lightDomSelectors = Array.isArray(lightDomSelector)\n        ? lightDomSelector\n        : [lightDomSelector];\n    class SlotPresenceObservingElement\n        extends constructor\n        implements SlotPresenceObservingInterface\n    {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        constructor(...args: any[]) {\n            super(args);\n\n            new MutationController(this, {\n                config: {\n                    childList: true,\n                    subtree: true,\n                },\n                callback: () => {\n                    this.managePresenceObservedSlot();\n                },\n            });\n\n            this.managePresenceObservedSlot();\n        }\n\n        /**\n         *  @private\n         */\n        public get slotContentIsPresent(): boolean {\n            if (lightDomSelectors.length === 1) {\n                return (\n                    this[slotContentIsPresent].get(lightDomSelectors[0]) ||\n                    false\n                );\n            } else {\n                throw new Error(\n                    'Multiple selectors provided to `ObserveSlotPresence` use `getSlotContentPresence(selector: string)` instead.'\n                );\n            }\n        }\n        private [slotContentIsPresent]: Map<string, boolean> = new Map();\n\n        public getSlotContentPresence(selector: string): boolean {\n            if (this[slotContentIsPresent].has(selector)) {\n                return this[slotContentIsPresent].get(selector) || false;\n            }\n            throw new Error(\n                `The provided selector \\`${selector}\\` is not being observed.`\n            );\n        }\n\n        public managePresenceObservedSlot = (): void => {\n            let changes = false;\n            lightDomSelectors.forEach((selector) => {\n                const nextValue = !!this.querySelector(`:scope > ${selector}`);\n                const previousValue =\n                    this[slotContentIsPresent].get(selector) || false;\n                changes = changes || previousValue !== nextValue;\n                this[slotContentIsPresent].set(\n                    selector,\n                    !!this.querySelector(`:scope > ${selector}`)\n                );\n            });\n            if (changes) {\n                this.updateComplete.then(() => {\n                    this.requestUpdate();\n                });\n            }\n        };\n    }\n    return SlotPresenceObservingElement;\n}\n", "/*\nCopyright 2020 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\nimport { PropertyValues, ReactiveElement } from '@spectrum-web-components/base';\nimport {\n    property,\n    queryAssignedNodes,\n} from '@spectrum-web-components/base/src/decorators.js';\nimport { MutationController } from '@lit-labs/observers/mutation-controller.js';\n\nconst assignedNodesList = Symbol('assignedNodes');\n\ntype Constructor<T = Record<string, unknown>> = {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    new (...args: any[]): T;\n    prototype: T;\n};\n\nexport interface SlotTextObservingInterface {\n    slotHasContent: boolean;\n    manageTextObservedSlot(): void;\n}\n\nexport function ObserveSlotText<T extends Constructor<ReactiveElement>>(\n    constructor: T,\n    slotName?: string,\n    excludedSelectors: string[] = []\n): T & Constructor<SlotTextObservingInterface> {\n    const notExcluded = (el: HTMLElement) => (selector: string) => {\n        return el.matches(selector);\n    };\n\n    class SlotTextObservingElement\n        extends constructor\n        implements SlotTextObservingInterface\n    {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        constructor(...args: any[]) {\n            super(args);\n\n            new MutationController(this, {\n                config: {\n                    characterData: true,\n                    subtree: true,\n                },\n                callback: (mutationsList: Array<MutationRecord>) => {\n                    for (const mutation of mutationsList) {\n                        if (mutation.type === 'characterData') {\n                            this.manageTextObservedSlot();\n                            return;\n                        }\n                    }\n                },\n            });\n        }\n\n        @property({ type: Boolean, attribute: false })\n        public slotHasContent = false;\n\n        @queryAssignedNodes({\n            slot: slotName,\n            flatten: true,\n        })\n        private [assignedNodesList]!: NodeListOf<HTMLElement>;\n\n        public manageTextObservedSlot(): void {\n            if (!this[assignedNodesList]) return;\n            const assignedNodes = [...this[assignedNodesList]].filter(\n                (currentNode) => {\n                    const node = currentNode as HTMLElement;\n                    if (node.tagName) {\n                        return !excludedSelectors.some(notExcluded(node));\n                    }\n                    return node.textContent ? node.textContent.trim() : false;\n                }\n            );\n            this.slotHasContent = assignedNodes.length > 0;\n        }\n\n        protected override update(changedProperties: PropertyValues): void {\n            if (!this.hasUpdated) {\n                const { childNodes } = this;\n                const textNodes = [...childNodes].filter((currentNode) => {\n                    const node = currentNode as HTMLElement;\n                    if (node.tagName) {\n                        const excluded = excludedSelectors.some(\n                            notExcluded(node)\n                        );\n                        return !excluded\n                            ? // This pass happens at element upgrade and before slot rendering.\n                              // Confirm it would exisit in a targeted slot if there was one supplied.\n                              slotName\n                                ? node.getAttribute('slot') === slotName\n                                : !node.hasAttribute('slot')\n                            : false;\n                    }\n                    return node.textContent ? node.textContent.trim() : false;\n                });\n                this.slotHasContent = textNodes.length > 0;\n            }\n            super.update(changedProperties);\n        }\n\n        protected override firstUpdated(\n            changedProperties: PropertyValues\n        ): void {\n            super.firstUpdated(changedProperties);\n            this.updateComplete.then(() => {\n                this.manageTextObservedSlot();\n            });\n        }\n    }\n    return SlotTextObservingElement;\n}\n", "/*\nCopyright 2020 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\n\nfunction testUserAgent(re: RegExp): boolean {\n    return typeof window !== 'undefined' && window.navigator != null\n        ? re.test(window.navigator.userAgent)\n        : false;\n}\n\nfunction testPlatform(re: RegExp): boolean {\n    return typeof window !== 'undefined' && window.navigator != null\n        ? re.test(window.navigator.platform)\n        : false;\n}\n\n/* c8 ignore next 3 */\nexport function isMac(): boolean {\n    return testPlatform(/^Mac/);\n}\n\nexport function isIPhone(): boolean {\n    return testPlatform(/^iPhone/);\n}\n\nexport function isIPad(): boolean {\n    return (\n        testPlatform(/^iPad/) ||\n        // iPadOS 13 lies and says it's a Mac, but we can distinguish by detecting touch support.\n        (isMac() && navigator.maxTouchPoints > 1)\n    );\n}\n\nexport function isIOS(): boolean {\n    return isIPhone() || isIPad();\n}\n\n/* c8 ignore next 3 */\nexport function isAppleDevice(): boolean {\n    return isMac() || isIOS();\n}\n\n/* c8 ignore next 3 */\nexport function isWebKit(): boolean {\n    return testUserAgent(/AppleWebKit/) && !isChrome();\n}\n\n/* c8 ignore next 3 */\nexport function isChrome(): boolean {\n    return testUserAgent(/Chrome/);\n}\n\nexport function isFirefox(): boolean {\n    return testUserAgent(/Firefox/) && !isSeamonkey();\n}\n\nexport function isSeamonkey(): boolean {\n    return testUserAgent(/Seamonkey/);\n}\n\nexport function isAndroid(): boolean {\n    return testUserAgent(/Android/);\n}\n", "/*\nCopyright 2020 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\nfunction restoreChildren<T extends Element>(\n    placeholderItems: Comment[],\n    srcElements: T[],\n    cleanupCallbacks: ((el: T) => void)[] = []\n): T[] {\n    for (let index = 0; index < srcElements.length; ++index) {\n        const srcElement = srcElements[index];\n        const placeholderItem = placeholderItems[index];\n        const parentElement =\n            placeholderItem.parentElement || placeholderItem.getRootNode();\n        if (cleanupCallbacks[index]) {\n            cleanupCallbacks[index](srcElement);\n        }\n        if (parentElement && parentElement !== placeholderItem) {\n            parentElement.replaceChild(srcElement, placeholderItem);\n        }\n        delete placeholderItems[index];\n    }\n    return srcElements;\n}\n\nexport const reparentChildren = <T extends Element>(\n    srcElements: T[],\n    destination: Element,\n    {\n        position,\n        prepareCallback,\n    }: {\n        position: InsertPosition;\n        prepareCallback?: (el: T) => ((el: T) => void) | void;\n    } = { position: 'beforeend' }\n): (() => T[]) => {\n    let { length } = srcElements;\n    if (length === 0) {\n        return () => srcElements;\n    }\n\n    let step = 1;\n    let index = 0;\n\n    if (position === 'afterbegin' || position === 'afterend') {\n        step = -1;\n        index = length - 1;\n    }\n\n    const placeholderItems = new Array<Comment>(length);\n    const cleanupCallbacks = new Array<(el: T) => void>(length);\n    const placeholderTemplate: Comment = document.createComment(\n        'placeholder for reparented element'\n    );\n\n    do {\n        const srcElement = srcElements[index];\n        if (prepareCallback) {\n            cleanupCallbacks[index] = prepareCallback(srcElement) as (\n                el: T\n            ) => void;\n        }\n        placeholderItems[index] = placeholderTemplate.cloneNode() as Comment;\n\n        const parentElement =\n            srcElement.parentElement || srcElement.getRootNode();\n        if (parentElement && parentElement !== srcElement) {\n            parentElement.replaceChild(placeholderItems[index], srcElement);\n        }\n        destination.insertAdjacentElement(position, srcElement);\n\n        index += step;\n    } while (--length > 0);\n\n    return function (): T[] {\n        return restoreChildren<T>(\n            placeholderItems,\n            srcElements,\n            cleanupCallbacks\n        );\n    };\n};\n", "/*\nCopyright 2022 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\n\nexport const getLabelFromSlot = (\n    label: string,\n    slotEl: HTMLSlotElement\n): string | null => {\n    if (label) return null;\n    const textContent = slotEl\n        .assignedNodes()\n        .reduce((accumulator: string, node: Node) => {\n            if (node.textContent) {\n                return accumulator + node.textContent;\n            } else {\n                return accumulator;\n            }\n        }, '');\n    if (textContent) {\n        return textContent.trim();\n    } else {\n        return null;\n    }\n};\n", "/*\nCopyright 2024 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\n\n// This gnarly-looking implementation returns the equivalent of crypto.randomUUID().slice(0, 8).\n// It uses getRandomValues() in order to be compatible with HTTP contexts.\nexport function randomID(): string {\n    return Array.from(crypto.getRandomValues(new Uint8Array(4)), (b) =>\n        `0${(b & 0xff).toString(16)}`.slice(-2)\n    ).join('');\n}\n"],
  "mappings": "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",
  "names": ["e", "focusables", "userFocuable", "root", "userFocusableSelector", "element", "hasFocusVisible", "error", "SuperClass", "_a", "_b", "coordinateWithPolyfill", "instance", "coordinationHandler", "$endPolyfillCoordination", "FocusVisibleCoordinator", "SpectrumElement", "property", "nextFrame", "res", "FocusVisiblePolyfillMixin", "SpectrumElement", "tabindex", "tabIndexAttribute", "tabIndex", "_a", "options", "focusElement", "changes", "changedProperties", "disabled", "oldDisabled", "canSetDisabled", "complete", "__decorateClass", "property", "el", "html", "property", "ifDefined", "constructor", "LikeAnchorElement", "id", "className", "ariaHidden", "labelledby", "tabindex", "anchorContent", "__decorateClass", "MutationController", "host", "target", "config", "callback", "skipInitial", "this", "_targets", "Set", "_skipInitial", "_unobservedUpdate", "_host", "add", "_config", "window", "MutationObserver", "_observer", "records", "handleChanges", "requestUpdate", "addController", "console", "warn", "value", "hostConnected", "observe", "hostDisconnected", "disconnect", "hostUpdated", "pendingRecords", "takeRecords", "length", "slotContentIsPresent", "constructor", "lightDomSelector", "_a", "_b", "lightDomSelectors", "SlotPresenceObservingElement", "args", "changes", "selector", "nextValue", "previousValue", "MutationController", "property", "queryAssignedNodes", "assignedNodesList", "constructor", "slotName", "excludedSelectors", "_a", "_b", "notExcluded", "el", "selector", "SlotTextObservingElement", "args", "MutationController", "mutationsList", "mutation", "assignedNodes", "currentNode", "node", "changedProperties", "childNodes", "textNodes", "__decorateClass", "property", "queryAssignedNodes", "testUserAgent", "re", "testPlatform", "restoreChildren", "placeholderItems", "srcElements", "cleanupCallbacks", "index", "srcElement", "placeholderItem", "parentElement", "destination", "position", "prepareCallback", "length", "step", "placeholderTemplate", "label", "slotEl", "textContent", "accumulator", "node", "b"]
}
