import fs from 'fs';
// eslint-disable-next-line import/no-extraneous-dependencies
import { build } from 'esbuild';

const ICONS = [
  'asterisk', 'chevron', 'checkmark', 'dash',
];

const ICON_PATH_PATTERN = /^@spectrum-web-components\/icon\/src\/spectrum-icon-(.*).css.js/;

const IGNORE_PATHS = [
  '@spectrum-web-components/modal/src/modal-wrapper.css.js',
  '@spectrum-web-components/modal/src/modal.css.js',
];

function rewriteImports() {
  return {
    name: 'rewrite-imports',
    // eslint-disable-next-line no-shadow
    setup(build) {
      // eslint-disable-next-line consistent-return
      build.onResolve({ filter: /.*/ }, (args) => {
        /* Spectrum Web Components */
        // if path is for another module, rewrite it as external
        let [entry] = build.initialOptions.entryPoints;
        ([entry] = entry.replace('./src/', '').split('.'));

        if (ICON_PATH_PATTERN.test(args.path)) {
          const iconName = args.path.match(ICON_PATH_PATTERN)[1];
          return {
            path: `/libs/features/spectrum-web-components/dist/icons/${iconName}.js`,
            external: true,
          };
        }

        if (/@spectrum-web-components/.test(args.path) && args.path.indexOf(`@spectrum-web-components/${entry}`) < 0 && !IGNORE_PATHS.includes(args.path)) {
          // get the first folder after @spectrum-web-components
          const [, module] = args.path.split('/');
          return {
            path: `/libs/features/spectrum-web-components/dist/${module}.js`,
            external: true,
          };
        }
        return undefined;
      });
    },
  };
}

const mods = fs.readdirSync('./src');

mods.forEach((mod) => {
  build({
    define: { 'process.env.NODE_ENV': '"development"' },
    bundle: true,
    banner: { js: '/* Generated by Milo*/\n/* eslint-disable */' },
    entryPoints: [`./src/${mod}`],
    platform: 'browser',
    target: 'esnext',
    format: 'esm',
    sourcemap: false,
    legalComments: 'none',
    minifyWhitespace: false,
    minifyIdentifiers: false,
    minifySyntax: false,
    minify: false,
    // minify: true,
    plugins: [rewriteImports()],
    outfile: `./dist/${mod}`,
  });
});

ICONS.forEach((icon) => {
  build({
    define: { 'process.env.NODE_ENV': '"development"' },
    bundle: true,
    banner: { js: '/* Generated by Milo*/\n/* eslint-disable */' },
    entryPoints: [`./node_modules/@spectrum-web-components/icon/src/spectrum-icon-${icon}.css.js/`],
    platform: 'browser',
    target: 'esnext',
    format: 'esm',
    sourcemap: false,
    legalComments: 'none',
    minifyWhitespace: false,
    minifyIdentifiers: false,
    minifySyntax: false,
    minify: false,
    // minify: true,
    outfile: `./dist/icons/${icon}.js`,
  });
});
